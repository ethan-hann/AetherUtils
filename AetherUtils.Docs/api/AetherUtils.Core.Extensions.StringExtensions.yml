### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Extensions.StringExtensions
  commentId: T:AetherUtils.Core.Extensions.StringExtensions
  id: StringExtensions
  parent: AetherUtils.Core.Extensions
  children:
  - AetherUtils.Core.Extensions.StringExtensions.BytesFromString(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.DeserializeJson``1(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.DeserializeXml``1(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.FromSecureString(System.Security.SecureString)
  - AetherUtils.Core.Extensions.StringExtensions.ImageFromString(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  - AetherUtils.Core.Extensions.StringExtensions.ToSecureString(System.String)
  - AetherUtils.Core.Extensions.StringExtensions.Trim(System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: StringExtensions
  nameWithType: StringExtensions
  fullName: AetherUtils.Core.Extensions.StringExtensions
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: StringExtensions
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 15
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Provides extension methods for manipulating <xref href="System.String" data-throw-if-not-resolved="false"></xref> objects.
  example: []
  syntax:
    content: public static class StringExtensions
    content.vb: Public Module StringExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AetherUtils.Core.Extensions.StringExtensions.ImageFromString(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.ImageFromString(System.String)
  id: ImageFromString(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ImageFromString(string)
  nameWithType: StringExtensions.ImageFromString(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.ImageFromString(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ImageFromString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 24
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Convert the Base64 representation of a picture into a usable <xref href="System.Drawing.Image" data-throw-if-not-resolved="false"></xref> object for drawing.
  example: []
  syntax:
    content: public static Image ImageFromString(this string base64)
    parameters:
    - id: base64
      type: System.String
      description: The <xref href="System.Drawing.Image" data-throw-if-not-resolved="false"></xref> as a Base64 <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Drawing.Image
      description: An <xref href="System.Drawing.Image" data-throw-if-not-resolved="false"></xref> or <code>null</code> if <code class="paramref">base64</code> is an invalid string.
    content.vb: Public Shared Function ImageFromString(base64 As String) As Image
  overload: AetherUtils.Core.Extensions.StringExtensions.ImageFromString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If base64 was <code>null</code>.
  - type: System.FormatException
    commentId: T:System.FormatException
    description: If the input was not a valid Base64 <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  nameWithType.vb: StringExtensions.ImageFromString(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.ImageFromString(String)
  name.vb: ImageFromString(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.ToSecureString(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.ToSecureString(System.String)
  id: ToSecureString(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: ToSecureString(string)
  nameWithType: StringExtensions.ToSecureString(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.ToSecureString(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ToSecureString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 41
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Convert an unsecure <xref href="System.String" data-throw-if-not-resolved="false"></xref> value into a <xref href="System.Security.SecureString" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static SecureString ToSecureString(this string unsecure)
    parameters:
    - id: unsecure
      type: System.String
      description: The unsecure <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Security.SecureString
      description: A new read-only <xref href="System.Security.SecureString" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function ToSecureString(unsecure As String) As SecureString
  overload: AetherUtils.Core.Extensions.StringExtensions.ToSecureString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">unsecure</code> was <code>null</code>.
  nameWithType.vb: StringExtensions.ToSecureString(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.ToSecureString(String)
  name.vb: ToSecureString(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.FromSecureString(System.Security.SecureString)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.FromSecureString(System.Security.SecureString)
  id: FromSecureString(System.Security.SecureString)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: FromSecureString(SecureString)
  nameWithType: StringExtensions.FromSecureString(SecureString)
  fullName: AetherUtils.Core.Extensions.StringExtensions.FromSecureString(System.Security.SecureString)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: FromSecureString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 57
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Convert a <xref href="System.Security.SecureString" data-throw-if-not-resolved="false"></xref> to an unsecured <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string FromSecureString(this SecureString secure)
    parameters:
    - id: secure
      type: System.Security.SecureString
      description: The <xref href="System.Security.SecureString" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.String
      description: The unsecured <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function FromSecureString(secure As SecureString) As String
  overload: AetherUtils.Core.Extensions.StringExtensions.FromSecureString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">secure</code> was <code>null</code>.
- uid: AetherUtils.Core.Extensions.StringExtensions.Trim(System.String,System.Int32)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.Trim(System.String,System.Int32)
  id: Trim(System.String,System.Int32)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: Trim(string, int)
  nameWithType: StringExtensions.Trim(string, int)
  fullName: AetherUtils.Core.Extensions.StringExtensions.Trim(string, int)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Trim
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 83
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: >-
    Trims the <xref href="System.String" data-throw-if-not-resolved="false"></xref> to be the length specified before a new-line character is inserted.

    <p>If the new-line character would be inserted at the position of a period (<code>.</code>), the

    new line is inserted at the index of <code>(.) + 1</code>.

    If the line being checked contains a new-line character already, nothing is done for that line.</p>
  example: []
  syntax:
    content: public static TrimmedString Trim(this string input, int lineLength = 80)
    parameters:
    - id: input
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to trim.
    - id: lineLength
      type: System.Int32
      description: The number of characters in the line; default is <code>80</code>.
    return:
      type: AetherUtils.Core.Structs.TrimmedString
      description: A new <xref href="AetherUtils.Core.Structs.TrimmedString" data-throw-if-not-resolved="false"></xref> containing the trimmed <xref href="System.String" data-throw-if-not-resolved="false"></xref> and the number of new lines.
    content.vb: Public Shared Function Trim(input As String, lineLength As Integer = 80) As TrimmedString
  overload: AetherUtils.Core.Extensions.StringExtensions.Trim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">input</code> was <code>null</code>.
  nameWithType.vb: StringExtensions.Trim(String, Integer)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.Trim(String, Integer)
  name.vb: Trim(String, Integer)
- uid: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml``1(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.DeserializeXml``1(System.String)
  id: DeserializeXml``1(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: DeserializeXml<T>(string)
  nameWithType: StringExtensions.DeserializeXml<T>(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml<T>(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: DeserializeXml
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 117
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Deserializes an object from an XML <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static T? DeserializeXml<T>(this string xml) where T : class'
    parameters:
    - id: xml
      type: System.String
      description: The XML <xref href="System.String" data-throw-if-not-resolved="false"></xref> to deserialize.
    typeParameters:
    - id: T
      description: The type of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to deserialize to.
    return:
      type: '{T}'
      description: The deserialized <xref href="System.Object" data-throw-if-not-resolved="false"></xref> or <code>null</code> if the deserialization failed.
    content.vb: Public Shared Function DeserializeXml(Of T As Class)(xml As String) As T
  overload: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If <code class="paramref">xml</code> was <code>null</code> or empty.
  nameWithType.vb: StringExtensions.DeserializeXml(Of T)(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml(Of T)(String)
  name.vb: DeserializeXml(Of T)(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson``1(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.DeserializeJson``1(System.String)
  id: DeserializeJson``1(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: DeserializeJson<T>(string)
  nameWithType: StringExtensions.DeserializeJson<T>(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson<T>(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: DeserializeJson
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 138
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Deserializes an object from a JSON <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: 'public static T? DeserializeJson<T>(this string json) where T : class'
    parameters:
    - id: json
      type: System.String
      description: The JSON <xref href="System.String" data-throw-if-not-resolved="false"></xref> to deserialize.
    typeParameters:
    - id: T
      description: The type of <xref href="System.Object" data-throw-if-not-resolved="false"></xref> to deserialize to.
    return:
      type: '{T}'
      description: The deserialized <xref href="System.Object" data-throw-if-not-resolved="false"></xref> or <code>null</code> if the deserialization failed.
    content.vb: Public Shared Function DeserializeJson(Of T As Class)(json As String) As T
  overload: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If <code class="paramref">json</code> was <code>null</code> or empty.
  nameWithType.vb: StringExtensions.DeserializeJson(Of T)(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson(Of T)(String)
  name.vb: DeserializeJson(Of T)(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded(System.String)
  id: IsBase64Encoded(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsBase64Encoded(string)
  nameWithType: StringExtensions.IsBase64Encoded(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IsBase64Encoded
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 152
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Get a value indicating if the <xref href="System.String" data-throw-if-not-resolved="false"></xref> appears to be Base64 encoded.
  example: []
  syntax:
    content: public static bool IsBase64Encoded(this string input)
    parameters:
    - id: input
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to check encoding on.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="System.String" data-throw-if-not-resolved="false"></xref> is Base64 encoded; <code>false</code> otherwise.
    content.vb: Public Shared Function IsBase64Encoded(input As String) As Boolean
  overload: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">input</code> was <code>null</code>.
  nameWithType.vb: StringExtensions.IsBase64Encoded(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded(String)
  name.vb: IsBase64Encoded(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded(System.String)
  id: IsHexEncoded(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: IsHexEncoded(string)
  nameWithType: StringExtensions.IsHexEncoded(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IsHexEncoded
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 164
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Get a value indicating if the <xref href="System.String" data-throw-if-not-resolved="false"></xref> appears to be Hex (Base16) encoded.
  example: []
  syntax:
    content: public static bool IsHexEncoded(this string input)
    parameters:
    - id: input
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to check encoding on.
    return:
      type: System.Boolean
      description: <code>true</code> if the <xref href="System.String" data-throw-if-not-resolved="false"></xref> is Hex encoded; <code>false</code> otherwise.
    content.vb: Public Shared Function IsHexEncoded(input As String) As Boolean
  overload: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">input</code> was <code>null</code>.
  nameWithType.vb: StringExtensions.IsHexEncoded(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded(String)
  name.vb: IsHexEncoded(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  id: StringToEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: StringToEncodedString(string, HashEncoding)
  nameWithType: StringExtensions.StringToEncodedString(string, HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString(string, AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: StringToEncodedString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 176
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Encode the <xref href="System.String" data-throw-if-not-resolved="false"></xref> to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string StringToEncodedString(this string value, HashEncoding encoding)
    parameters:
    - id: value
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to encode.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> encoded using the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function StringToEncodedString(value As String, encoding As HashEncoding) As String
  overload: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString*
  nameWithType.vb: StringExtensions.StringToEncodedString(String, HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString(String, AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: StringToEncodedString(String, HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  id: BytesToEncodedString(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: BytesToEncodedString(byte[], HashEncoding)
  nameWithType: StringExtensions.BytesToEncodedString(byte[], HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString(byte[], AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: BytesToEncodedString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 192
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Encode the <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string BytesToEncodedString(this byte[] bytes, HashEncoding encoding)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array to encode.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> encoded using the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function BytesToEncodedString(bytes As Byte(), encoding As HashEncoding) As String
  overload: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString*
  nameWithType.vb: StringExtensions.BytesToEncodedString(Byte(), HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString(Byte(), AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: BytesToEncodedString(Byte(), HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  id: StringToEncodedBytes(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: StringToEncodedBytes(string, HashEncoding)
  nameWithType: StringExtensions.StringToEncodedBytes(string, HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes(string, AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: StringToEncodedBytes
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 204
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Encode the <xref href="System.String" data-throw-if-not-resolved="false"></xref> to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte[] StringToEncodedBytes(this string value, HashEncoding encoding)
    parameters:
    - id: value
      type: System.String
      description: The <xref href="System.String" data-throw-if-not-resolved="false"></xref> to encode.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array containing the encoded bytes.
    content.vb: Public Shared Function StringToEncodedBytes(value As String, encoding As HashEncoding) As Byte()
  overload: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes*
  nameWithType.vb: StringExtensions.StringToEncodedBytes(String, HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes(String, AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: StringToEncodedBytes(String, HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  id: BytesToEncodedBytes(System.Byte[],AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: BytesToEncodedBytes(byte[], HashEncoding)
  nameWithType: StringExtensions.BytesToEncodedBytes(byte[], HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes(byte[], AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: BytesToEncodedBytes
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 216
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Encode the <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte[] BytesToEncodedBytes(this byte[] bytes, HashEncoding encoding)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array to encode.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array containing the encoded bytes.
    content.vb: Public Shared Function BytesToEncodedBytes(bytes As Byte(), encoding As HashEncoding) As Byte()
  overload: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes*
  nameWithType.vb: StringExtensions.BytesToEncodedBytes(Byte(), HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes(Byte(), AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: BytesToEncodedBytes(Byte(), HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  id: DecodedStringFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: DecodedStringFromEncodedString(string, HashEncoding)
  nameWithType: StringExtensions.DecodedStringFromEncodedString(string, HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString(string, AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: DecodedStringFromEncodedString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 228
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Decodes an encoded <xref href="System.String" data-throw-if-not-resolved="false"></xref> according to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string DecodedStringFromEncodedString(this string value, HashEncoding encoding)
    parameters:
    - id: value
      type: System.String
      description: The encoded <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.String
      description: A decoded <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function DecodedStringFromEncodedString(value As String, encoding As HashEncoding) As String
  overload: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString*
  nameWithType.vb: StringExtensions.DecodedStringFromEncodedString(String, HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString(String, AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: DecodedStringFromEncodedString(String, HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  id: DecodedBytesFromEncodedString(System.String,AetherUtils.Core.Security.Hashing.HashEncoding)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: DecodedBytesFromEncodedString(string, HashEncoding)
  nameWithType: StringExtensions.DecodedBytesFromEncodedString(string, HashEncoding)
  fullName: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString(string, AetherUtils.Core.Security.Hashing.HashEncoding)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: DecodedBytesFromEncodedString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 244
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Decodes the encoded <xref href="System.String" data-throw-if-not-resolved="false"></xref> according to the specified <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte[] DecodedBytesFromEncodedString(this string value, HashEncoding encoding)
    parameters:
    - id: value
      type: System.String
      description: The encoded <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    - id: encoding
      type: AetherUtils.Core.Security.Hashing.HashEncoding
      description: The <xref href="AetherUtils.Core.Security.Hashing.HashEncoding" data-throw-if-not-resolved="false"></xref> to use.
    return:
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array containing the decoded bytes.
    content.vb: Public Shared Function DecodedBytesFromEncodedString(value As String, encoding As HashEncoding) As Byte()
  overload: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString*
  nameWithType.vb: StringExtensions.DecodedBytesFromEncodedString(String, HashEncoding)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString(String, AetherUtils.Core.Security.Hashing.HashEncoding)
  name.vb: DecodedBytesFromEncodedString(String, HashEncoding)
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesFromString(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.BytesFromString(System.String)
  id: BytesFromString(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: BytesFromString(string)
  nameWithType: StringExtensions.BytesFromString(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesFromString(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: BytesFromString
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 259
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Get a <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array representing the <xref href="System.String" data-throw-if-not-resolved="false"></xref> using <xref href="System.Text.Encoding.UTF8" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static byte[] BytesFromString(this string value)
    parameters:
    - id: value
      type: System.String
      description: A <xref href="System.String" data-throw-if-not-resolved="false"></xref> to get the bytes of.
    return:
      type: System.Byte[]
      description: A <xref href="System.Byte" data-throw-if-not-resolved="false"></xref> array containing the bytes representing the <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Shared Function BytesFromString(value As String) As Byte()
  overload: AetherUtils.Core.Extensions.StringExtensions.BytesFromString*
  nameWithType.vb: StringExtensions.BytesFromString(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.BytesFromString(String)
  name.vb: BytesFromString(String)
- uid: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace(System.String)
  commentId: M:AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace(System.String)
  id: RemoveWhitespace(System.String)
  isExtensionMethod: true
  parent: AetherUtils.Core.Extensions.StringExtensions
  langs:
  - csharp
  - vb
  name: RemoveWhitespace(string)
  nameWithType: StringExtensions.RemoveWhitespace(string)
  fullName: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Extensions/StringExtensions.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: RemoveWhitespace
    path: ../AetherUtils.Core/Extensions/StringExtensions.cs
    startLine: 266
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Extensions
  summary: Removes all whitespace characters from the specified <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static string RemoveWhitespace(this string str)
    parameters:
    - id: str
      type: System.String
      description: The string to remove whitespace from.
    return:
      type: System.String
      description: A new string, without the whitespace characters.
    content.vb: Public Shared Function RemoveWhitespace(str As String) As String
  overload: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace*
  nameWithType.vb: StringExtensions.RemoveWhitespace(String)
  fullName.vb: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace(String)
  name.vb: RemoveWhitespace(String)
references:
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Drawing.Image
  commentId: T:System.Drawing.Image
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.image
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.FormatException
  commentId: T:System.FormatException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.formatexception
  name: FormatException
  nameWithType: FormatException
  fullName: System.FormatException
- uid: AetherUtils.Core.Extensions.StringExtensions.ImageFromString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.ImageFromString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_ImageFromString_System_String_
  name: ImageFromString
  nameWithType: StringExtensions.ImageFromString
  fullName: AetherUtils.Core.Extensions.StringExtensions.ImageFromString
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: System.Security.SecureString
  commentId: T:System.Security.SecureString
  parent: System.Security
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.securestring
  name: SecureString
  nameWithType: SecureString
  fullName: System.Security.SecureString
- uid: AetherUtils.Core.Extensions.StringExtensions.ToSecureString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.ToSecureString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_ToSecureString_System_String_
  name: ToSecureString
  nameWithType: StringExtensions.ToSecureString
  fullName: AetherUtils.Core.Extensions.StringExtensions.ToSecureString
- uid: System.Security
  commentId: N:System.Security
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security
  nameWithType: System.Security
  fullName: System.Security
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
- uid: AetherUtils.Core.Extensions.StringExtensions.FromSecureString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.FromSecureString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_FromSecureString_System_Security_SecureString_
  name: FromSecureString
  nameWithType: StringExtensions.FromSecureString
  fullName: AetherUtils.Core.Extensions.StringExtensions.FromSecureString
- uid: AetherUtils.Core.Structs.TrimmedString
  commentId: T:AetherUtils.Core.Structs.TrimmedString
  parent: AetherUtils.Core.Structs
  href: AetherUtils.Core.Structs.TrimmedString.html
  name: TrimmedString
  nameWithType: TrimmedString
  fullName: AetherUtils.Core.Structs.TrimmedString
- uid: AetherUtils.Core.Extensions.StringExtensions.Trim*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.Trim
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_Trim_System_String_System_Int32_
  name: Trim
  nameWithType: StringExtensions.Trim
  fullName: AetherUtils.Core.Extensions.StringExtensions.Trim
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AetherUtils.Core.Structs
  commentId: N:AetherUtils.Core.Structs
  href: AetherUtils.html
  name: AetherUtils.Core.Structs
  nameWithType: AetherUtils.Core.Structs
  fullName: AetherUtils.Core.Structs
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.DeserializeXml
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_DeserializeXml__1_System_String_
  name: DeserializeXml
  nameWithType: StringExtensions.DeserializeXml
  fullName: AetherUtils.Core.Extensions.StringExtensions.DeserializeXml
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.DeserializeJson
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_DeserializeJson__1_System_String_
  name: DeserializeJson
  nameWithType: StringExtensions.DeserializeJson
  fullName: AetherUtils.Core.Extensions.StringExtensions.DeserializeJson
- uid: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_IsBase64Encoded_System_String_
  name: IsBase64Encoded
  nameWithType: StringExtensions.IsBase64Encoded
  fullName: AetherUtils.Core.Extensions.StringExtensions.IsBase64Encoded
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_IsHexEncoded_System_String_
  name: IsHexEncoded
  nameWithType: StringExtensions.IsHexEncoded
  fullName: AetherUtils.Core.Extensions.StringExtensions.IsHexEncoded
- uid: AetherUtils.Core.Security.Hashing.HashEncoding
  commentId: T:AetherUtils.Core.Security.Hashing.HashEncoding
  parent: AetherUtils.Core.Security.Hashing
  href: AetherUtils.Core.Security.Hashing.HashEncoding.html
  name: HashEncoding
  nameWithType: HashEncoding
  fullName: AetherUtils.Core.Security.Hashing.HashEncoding
- uid: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_StringToEncodedString_System_String_AetherUtils_Core_Security_Hashing_HashEncoding_
  name: StringToEncodedString
  nameWithType: StringExtensions.StringToEncodedString
  fullName: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedString
- uid: AetherUtils.Core.Security.Hashing
  commentId: N:AetherUtils.Core.Security.Hashing
  href: AetherUtils.html
  name: AetherUtils.Core.Security.Hashing
  nameWithType: AetherUtils.Core.Security.Hashing
  fullName: AetherUtils.Core.Security.Hashing
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Hashing
    name: Hashing
    href: AetherUtils.Core.Security.Hashing.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Hashing
    name: Hashing
    href: AetherUtils.Core.Security.Hashing.html
- uid: System.Byte
  commentId: T:System.Byte
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte
  nameWithType: byte
  fullName: byte
  nameWithType.vb: Byte
  fullName.vb: Byte
  name.vb: Byte
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_BytesToEncodedString_System_Byte___AetherUtils_Core_Security_Hashing_HashEncoding_
  name: BytesToEncodedString
  nameWithType: StringExtensions.BytesToEncodedString
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedString
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_StringToEncodedBytes_System_String_AetherUtils_Core_Security_Hashing_HashEncoding_
  name: StringToEncodedBytes
  nameWithType: StringExtensions.StringToEncodedBytes
  fullName: AetherUtils.Core.Extensions.StringExtensions.StringToEncodedBytes
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_BytesToEncodedBytes_System_Byte___AetherUtils_Core_Security_Hashing_HashEncoding_
  name: BytesToEncodedBytes
  nameWithType: StringExtensions.BytesToEncodedBytes
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesToEncodedBytes
- uid: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_DecodedStringFromEncodedString_System_String_AetherUtils_Core_Security_Hashing_HashEncoding_
  name: DecodedStringFromEncodedString
  nameWithType: StringExtensions.DecodedStringFromEncodedString
  fullName: AetherUtils.Core.Extensions.StringExtensions.DecodedStringFromEncodedString
- uid: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_DecodedBytesFromEncodedString_System_String_AetherUtils_Core_Security_Hashing_HashEncoding_
  name: DecodedBytesFromEncodedString
  nameWithType: StringExtensions.DecodedBytesFromEncodedString
  fullName: AetherUtils.Core.Extensions.StringExtensions.DecodedBytesFromEncodedString
- uid: System.Text.Encoding.UTF8
  commentId: P:System.Text.Encoding.UTF8
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.encoding.utf8
  name: UTF8
  nameWithType: Encoding.UTF8
  fullName: System.Text.Encoding.UTF8
- uid: AetherUtils.Core.Extensions.StringExtensions.BytesFromString*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.BytesFromString
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_BytesFromString_System_String_
  name: BytesFromString
  nameWithType: StringExtensions.BytesFromString
  fullName: AetherUtils.Core.Extensions.StringExtensions.BytesFromString
- uid: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace*
  commentId: Overload:AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace
  href: AetherUtils.Core.Extensions.StringExtensions.html#AetherUtils_Core_Extensions_StringExtensions_RemoveWhitespace_System_String_
  name: RemoveWhitespace
  nameWithType: StringExtensions.RemoveWhitespace
  fullName: AetherUtils.Core.Extensions.StringExtensions.RemoveWhitespace
