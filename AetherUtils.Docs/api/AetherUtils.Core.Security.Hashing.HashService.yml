### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Security.Hashing.HashService
  commentId: T:AetherUtils.Core.Security.Hashing.HashService
  id: HashService
  parent: AetherUtils.Core.Security.Hashing
  children:
  - AetherUtils.Core.Security.Hashing.HashService.#ctor(AetherUtils.Core.Structs.HashOptions)
  - AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String)
  - AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String,System.String)
  - AetherUtils.Core.Security.Hashing.HashService.HashString(System.String)
  - AetherUtils.Core.Security.Hashing.HashService.HashedString
  langs:
  - csharp
  - vb
  name: HashService
  nameWithType: HashService
  fullName: AetherUtils.Core.Security.Hashing.HashService
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: HashService
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 12
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: >-
    Provides a service for creating cryptographically strong hashes of <xref href="System.String" data-throw-if-not-resolved="false"></xref>s and comparing plain-text <xref href="System.String" data-throw-if-not-resolved="false"></xref>s against them for equality.

    <p>This class hashes strings based on the provided <xref href="AetherUtils.Core.Structs.HashOptions" data-throw-if-not-resolved="false"></xref>.</p>
  example: []
  syntax:
    content: public sealed class HashService
    content.vb: Public NotInheritable Class HashService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
- uid: AetherUtils.Core.Security.Hashing.HashService.HashedString
  commentId: P:AetherUtils.Core.Security.Hashing.HashService.HashedString
  id: HashedString
  parent: AetherUtils.Core.Security.Hashing.HashService
  langs:
  - csharp
  - vb
  name: HashedString
  nameWithType: HashService.HashedString
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashedString
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: HashedString
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 21
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: Get the hashed string for this <xref href="AetherUtils.Core.Security.Hashing.HashService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string HashedString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property HashedString As String
  overload: AetherUtils.Core.Security.Hashing.HashService.HashedString*
- uid: AetherUtils.Core.Security.Hashing.HashService.#ctor(AetherUtils.Core.Structs.HashOptions)
  commentId: M:AetherUtils.Core.Security.Hashing.HashService.#ctor(AetherUtils.Core.Structs.HashOptions)
  id: '#ctor(AetherUtils.Core.Structs.HashOptions)'
  parent: AetherUtils.Core.Security.Hashing.HashService
  langs:
  - csharp
  - vb
  name: HashService(HashOptions)
  nameWithType: HashService.HashService(HashOptions)
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashService(AetherUtils.Core.Structs.HashOptions)
  type: Constructor
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: .ctor
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 27
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: Create a new service with the specified <xref href="AetherUtils.Core.Structs.HashOptions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public HashService(HashOptions options)
    parameters:
    - id: options
      type: AetherUtils.Core.Structs.HashOptions
      description: The options that should be used for hashing.
    content.vb: Public Sub New(options As HashOptions)
  overload: AetherUtils.Core.Security.Hashing.HashService.#ctor*
  nameWithType.vb: HashService.New(HashOptions)
  fullName.vb: AetherUtils.Core.Security.Hashing.HashService.New(AetherUtils.Core.Structs.HashOptions)
  name.vb: New(HashOptions)
- uid: AetherUtils.Core.Security.Hashing.HashService.HashString(System.String)
  commentId: M:AetherUtils.Core.Security.Hashing.HashService.HashString(System.String)
  id: HashString(System.String)
  parent: AetherUtils.Core.Security.Hashing.HashService
  langs:
  - csharp
  - vb
  name: HashString(string)
  nameWithType: HashService.HashString(string)
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashString(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: HashString
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 35
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: Generate a hash string for the specified plain-text string according to this object's <xref href="AetherUtils.Core.Structs.HashOptions" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public string HashString(string value)
    parameters:
    - id: value
      type: System.String
      description: The plain text string to hash.
    return:
      type: System.String
      description: A cryptographically strong hashed string.
    content.vb: Public Function HashString(value As String) As String
  overload: AetherUtils.Core.Security.Hashing.HashService.HashString*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If <code class="paramref">value</code> was <code>null</code>.
  nameWithType.vb: HashService.HashString(String)
  fullName.vb: AetherUtils.Core.Security.Hashing.HashService.HashString(String)
  name.vb: HashString(String)
- uid: AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String)
  commentId: M:AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String)
  id: CompareHash(System.String)
  parent: AetherUtils.Core.Security.Hashing.HashService
  langs:
  - csharp
  - vb
  name: CompareHash(string)
  nameWithType: HashService.CompareHash(string)
  fullName: AetherUtils.Core.Security.Hashing.HashService.CompareHash(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: CompareHash
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 87
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: Compare a non-hashed input <xref href="System.String" data-throw-if-not-resolved="false"></xref> against the last hashed string for this <xref href="AetherUtils.Core.Security.Hashing.HashService" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool CompareHash(string input)
    parameters:
    - id: input
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: <code>true</code> if the two strings are equivalent; <code>false</code> otherwise.
    content.vb: Public Function CompareHash(input As String) As Boolean
  overload: AetherUtils.Core.Security.Hashing.HashService.CompareHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">input</code> is <code>null</code> or empty.
  nameWithType.vb: HashService.CompareHash(String)
  fullName.vb: AetherUtils.Core.Security.Hashing.HashService.CompareHash(String)
  name.vb: CompareHash(String)
- uid: AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String,System.String)
  commentId: M:AetherUtils.Core.Security.Hashing.HashService.CompareHash(System.String,System.String)
  id: CompareHash(System.String,System.String)
  parent: AetherUtils.Core.Security.Hashing.HashService
  langs:
  - csharp
  - vb
  name: CompareHash(string, string)
  nameWithType: HashService.CompareHash(string, string)
  fullName: AetherUtils.Core.Security.Hashing.HashService.CompareHash(string, string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Hashing/HashService.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: CompareHash
    path: ../AetherUtils.Core/Security/Hashing/HashService.cs
    startLine: 96
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Hashing
  summary: Compare a non-hashed input <xref href="System.String" data-throw-if-not-resolved="false"></xref> against a hashed <xref href="System.String" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool CompareHash(string input, string hashString)
    parameters:
    - id: input
      type: System.String
      description: The non-hashed string.
    - id: hashString
      type: System.String
      description: A hash string to compare against.
    return:
      type: System.Boolean
      description: <code>true</code> if the two strings are equivalent; <code>false</code> otherwise.
    content.vb: Public Shared Function CompareHash(input As String, hashString As String) As Boolean
  overload: AetherUtils.Core.Security.Hashing.HashService.CompareHash*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown if <code class="paramref">input</code> or <code class="paramref">hashString</code> are <code>null</code> or empty.
  nameWithType.vb: HashService.CompareHash(String, String)
  fullName.vb: AetherUtils.Core.Security.Hashing.HashService.CompareHash(String, String)
  name.vb: CompareHash(String, String)
references:
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Structs.HashOptions
  commentId: T:AetherUtils.Core.Structs.HashOptions
  parent: AetherUtils.Core.Structs
  href: AetherUtils.Core.Structs.HashOptions.html
  name: HashOptions
  nameWithType: HashOptions
  fullName: AetherUtils.Core.Structs.HashOptions
- uid: AetherUtils.Core.Security.Hashing
  commentId: N:AetherUtils.Core.Security.Hashing
  href: AetherUtils.html
  name: AetherUtils.Core.Security.Hashing
  nameWithType: AetherUtils.Core.Security.Hashing
  fullName: AetherUtils.Core.Security.Hashing
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Hashing
    name: Hashing
    href: AetherUtils.Core.Security.Hashing.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Hashing
    name: Hashing
    href: AetherUtils.Core.Security.Hashing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<HashService>(HashService)
  nameWithType: TypeExtensions.CanSerializeJson<HashService>(HashService)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Security.Hashing.HashService>(AetherUtils.Core.Security.Hashing.HashService)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of HashService)(HashService)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Security.Hashing.HashService)(AetherUtils.Core.Security.Hashing.HashService)
  name.vb: CanSerializeJson(Of HashService)(HashService)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Hashing.HashService)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Hashing.HashService)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
- uid: AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<HashService>(HashService)
  nameWithType: TypeExtensions.CanSerializeXml<HashService>(HashService)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Security.Hashing.HashService>(AetherUtils.Core.Security.Hashing.HashService)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of HashService)(HashService)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Security.Hashing.HashService)(AetherUtils.Core.Security.Hashing.HashService)
  name.vb: CanSerializeXml(Of HashService)(HashService)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Hashing.HashService)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Hashing.HashService)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
- uid: AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<HashService>(HashService)
  nameWithType: TypeExtensions.SerializeJson<HashService>(HashService)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Security.Hashing.HashService>(AetherUtils.Core.Security.Hashing.HashService)
  nameWithType.vb: TypeExtensions.SerializeJson(Of HashService)(HashService)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Security.Hashing.HashService)(AetherUtils.Core.Security.Hashing.HashService)
  name.vb: SerializeJson(Of HashService)(HashService)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Hashing.HashService)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Hashing.HashService)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
- uid: AetherUtils.Core.Security.Hashing.HashService.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<HashService>(HashService)
  nameWithType: TypeExtensions.SerializeXml<HashService>(HashService)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Security.Hashing.HashService>(AetherUtils.Core.Security.Hashing.HashService)
  nameWithType.vb: TypeExtensions.SerializeXml(Of HashService)(HashService)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Security.Hashing.HashService)(AetherUtils.Core.Security.Hashing.HashService)
  name.vb: SerializeXml(Of HashService)(HashService)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Hashing.HashService)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Hashing.HashService)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Hashing.HashService
    name: HashService
    href: AetherUtils.Core.Security.Hashing.HashService.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Structs
  commentId: N:AetherUtils.Core.Structs
  href: AetherUtils.html
  name: AetherUtils.Core.Structs
  nameWithType: AetherUtils.Core.Structs
  fullName: AetherUtils.Core.Structs
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Security.Hashing.HashService
  commentId: T:AetherUtils.Core.Security.Hashing.HashService
  href: AetherUtils.Core.Security.Hashing.HashService.html
  name: HashService
  nameWithType: HashService
  fullName: AetherUtils.Core.Security.Hashing.HashService
- uid: AetherUtils.Core.Security.Hashing.HashService.HashedString*
  commentId: Overload:AetherUtils.Core.Security.Hashing.HashService.HashedString
  href: AetherUtils.Core.Security.Hashing.HashService.html#AetherUtils_Core_Security_Hashing_HashService_HashedString
  name: HashedString
  nameWithType: HashService.HashedString
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashedString
- uid: AetherUtils.Core.Security.Hashing.HashService.#ctor*
  commentId: Overload:AetherUtils.Core.Security.Hashing.HashService.#ctor
  href: AetherUtils.Core.Security.Hashing.HashService.html#AetherUtils_Core_Security_Hashing_HashService__ctor_AetherUtils_Core_Structs_HashOptions_
  name: HashService
  nameWithType: HashService.HashService
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashService
  nameWithType.vb: HashService.New
  fullName.vb: AetherUtils.Core.Security.Hashing.HashService.New
  name.vb: New
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: AetherUtils.Core.Security.Hashing.HashService.HashString*
  commentId: Overload:AetherUtils.Core.Security.Hashing.HashService.HashString
  href: AetherUtils.Core.Security.Hashing.HashService.html#AetherUtils_Core_Security_Hashing_HashService_HashString_System_String_
  name: HashString
  nameWithType: HashService.HashString
  fullName: AetherUtils.Core.Security.Hashing.HashService.HashString
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: AetherUtils.Core.Security.Hashing.HashService.CompareHash*
  commentId: Overload:AetherUtils.Core.Security.Hashing.HashService.CompareHash
  href: AetherUtils.Core.Security.Hashing.HashService.html#AetherUtils_Core_Security_Hashing_HashService_CompareHash_System_String_
  name: CompareHash
  nameWithType: HashService.CompareHash
  fullName: AetherUtils.Core.Security.Hashing.HashService.CompareHash
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
shouldSkipMarkup: true
