### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Structs.ConfigOption
  commentId: T:AetherUtils.Core.Structs.ConfigOption
  id: ConfigOption
  parent: AetherUtils.Core.Structs
  children:
  - AetherUtils.Core.Structs.ConfigOption.#ctor(System.String,System.Object)
  - AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
  - AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
  - AetherUtils.Core.Structs.ConfigOption.Name
  - AetherUtils.Core.Structs.ConfigOption.Value
  langs:
  - csharp
  - vb
  name: ConfigOption
  nameWithType: ConfigOption
  fullName: AetherUtils.Core.Structs.ConfigOption
  type: Struct
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ConfigOption
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 6
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  summary: >-
    Represents a single configuration option and it's value. This option can contain a single-dimensional list indexer:

    <code>optionName[0]</code> - get/set the configuration with name <code>optionName</code> at index 0, where <code>optionName</code> is a list.
  example: []
  syntax:
    content: public struct ConfigOption
    content.vb: Public Structure ConfigOption
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AetherUtils.Core.Structs.ConfigOption.Name
  commentId: P:AetherUtils.Core.Structs.ConfigOption.Name
  id: Name
  parent: AetherUtils.Core.Structs.ConfigOption
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConfigOption.Name
  fullName: AetherUtils.Core.Structs.ConfigOption.Name
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Name
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 8
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  syntax:
    content: public string Name { readonly get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: AetherUtils.Core.Structs.ConfigOption.Name*
- uid: AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
  commentId: P:AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
  id: ArrayIndexer
  parent: AetherUtils.Core.Structs.ConfigOption
  langs:
  - csharp
  - vb
  name: ArrayIndexer
  nameWithType: ConfigOption.ArrayIndexer
  fullName: AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ArrayIndexer
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 9
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  syntax:
    content: public int ArrayIndexer { readonly get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ArrayIndexer As Integer
  overload: AetherUtils.Core.Structs.ConfigOption.ArrayIndexer*
- uid: AetherUtils.Core.Structs.ConfigOption.Value
  commentId: P:AetherUtils.Core.Structs.ConfigOption.Value
  id: Value
  parent: AetherUtils.Core.Structs.ConfigOption
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ConfigOption.Value
  fullName: AetherUtils.Core.Structs.ConfigOption.Value
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Value
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 10
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  syntax:
    content: public object? Value { readonly get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: AetherUtils.Core.Structs.ConfigOption.Value*
- uid: AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
  commentId: P:AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
  id: ArrayIndexExists
  parent: AetherUtils.Core.Structs.ConfigOption
  langs:
  - csharp
  - vb
  name: ArrayIndexExists
  nameWithType: ConfigOption.ArrayIndexExists
  fullName: AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ArrayIndexExists
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 11
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  syntax:
    content: public readonly bool ArrayIndexExists { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property ArrayIndexExists As Boolean
  overload: AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists*
- uid: AetherUtils.Core.Structs.ConfigOption.#ctor(System.String,System.Object)
  commentId: M:AetherUtils.Core.Structs.ConfigOption.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: AetherUtils.Core.Structs.ConfigOption
  langs:
  - csharp
  - vb
  name: ConfigOption(string, object?)
  nameWithType: ConfigOption.ConfigOption(string, object?)
  fullName: AetherUtils.Core.Structs.ConfigOption.ConfigOption(string, object?)
  type: Constructor
  source:
    remote:
      path: AetherUtils.Core/Structs/ConfigOption.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: .ctor
    path: ../AetherUtils.Core/Structs/ConfigOption.cs
    startLine: 16
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  syntax:
    content: public ConfigOption(string option, object? value)
    parameters:
    - id: option
      type: System.String
    - id: value
      type: System.Object
    content.vb: Public Sub New([option] As String, value As Object)
  overload: AetherUtils.Core.Structs.ConfigOption.#ctor*
  nameWithType.vb: ConfigOption.New(String, Object)
  fullName.vb: AetherUtils.Core.Structs.ConfigOption.New(String, Object)
  name.vb: New(String, Object)
references:
- uid: AetherUtils.Core.Structs
  commentId: N:AetherUtils.Core.Structs
  href: AetherUtils.html
  name: AetherUtils.Core.Structs
  nameWithType: AetherUtils.Core.Structs
  fullName: AetherUtils.Core.Structs
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Structs.ConfigOption.Name*
  commentId: Overload:AetherUtils.Core.Structs.ConfigOption.Name
  href: AetherUtils.Core.Structs.ConfigOption.html#AetherUtils_Core_Structs_ConfigOption_Name
  name: Name
  nameWithType: ConfigOption.Name
  fullName: AetherUtils.Core.Structs.ConfigOption.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Structs.ConfigOption.ArrayIndexer*
  commentId: Overload:AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
  href: AetherUtils.Core.Structs.ConfigOption.html#AetherUtils_Core_Structs_ConfigOption_ArrayIndexer
  name: ArrayIndexer
  nameWithType: ConfigOption.ArrayIndexer
  fullName: AetherUtils.Core.Structs.ConfigOption.ArrayIndexer
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AetherUtils.Core.Structs.ConfigOption.Value*
  commentId: Overload:AetherUtils.Core.Structs.ConfigOption.Value
  href: AetherUtils.Core.Structs.ConfigOption.html#AetherUtils_Core_Structs_ConfigOption_Value
  name: Value
  nameWithType: ConfigOption.Value
  fullName: AetherUtils.Core.Structs.ConfigOption.Value
- uid: AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists*
  commentId: Overload:AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
  href: AetherUtils.Core.Structs.ConfigOption.html#AetherUtils_Core_Structs_ConfigOption_ArrayIndexExists
  name: ArrayIndexExists
  nameWithType: ConfigOption.ArrayIndexExists
  fullName: AetherUtils.Core.Structs.ConfigOption.ArrayIndexExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AetherUtils.Core.Structs.ConfigOption.#ctor*
  commentId: Overload:AetherUtils.Core.Structs.ConfigOption.#ctor
  href: AetherUtils.Core.Structs.ConfigOption.html#AetherUtils_Core_Structs_ConfigOption__ctor_System_String_System_Object_
  name: ConfigOption
  nameWithType: ConfigOption.ConfigOption
  fullName: AetherUtils.Core.Structs.ConfigOption.ConfigOption
  nameWithType.vb: ConfigOption.New
  fullName.vb: AetherUtils.Core.Structs.ConfigOption.New
  name.vb: New
shouldSkipMarkup: true
