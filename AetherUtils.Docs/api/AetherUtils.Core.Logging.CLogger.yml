### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Logging.CLogger
  commentId: T:AetherUtils.Core.Logging.CLogger
  id: CLogger
  parent: AetherUtils.Core.Logging
  children:
  - AetherUtils.Core.Logging.CLogger.GetCurrentLogger(System.String)
  - AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1
  - AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1(System.String)
  - AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  - AetherUtils.Core.Logging.CLogger.IsInitialized
  langs:
  - csharp
  - vb
  name: CLogger
  nameWithType: CLogger
  fullName: AetherUtils.Core.Logging.CLogger
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: CLogger
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 11
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  summary: >-
    Provides static methods to facilitate logging to a file as well as to the console for an application.

    Uses <xref href="NLog" data-throw-if-not-resolved="false"></xref> internally.
  example: []
  syntax:
    content: public static class CLogger
    content.vb: Public Module CLogger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AetherUtils.Core.Logging.CLogger.IsInitialized
  commentId: P:AetherUtils.Core.Logging.CLogger.IsInitialized
  id: IsInitialized
  parent: AetherUtils.Core.Logging.CLogger
  langs:
  - csharp
  - vb
  name: IsInitialized
  nameWithType: CLogger.IsInitialized
  fullName: AetherUtils.Core.Logging.CLogger.IsInitialized
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IsInitialized
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 15
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  syntax:
    content: public static bool IsInitialized { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Shared ReadOnly Property IsInitialized As Boolean
  overload: AetherUtils.Core.Logging.CLogger.IsInitialized*
- uid: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  commentId: M:AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  id: Initialize(AetherUtils.Core.Configuration.LogOptions)
  parent: AetherUtils.Core.Logging.CLogger
  langs:
  - csharp
  - vb
  name: Initialize(LogOptions)
  nameWithType: CLogger.Initialize(LogOptions)
  fullName: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Initialize
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 22
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  summary: >-
    Initialize the logger for the application. This should be called before any logging takes place; 

    usually, directly after reading or creating the initial configuration for the application.
  example: []
  syntax:
    content: public static void Initialize(LogOptions options)
    parameters:
    - id: options
      type: AetherUtils.Core.Configuration.LogOptions
      description: The <xref href="AetherUtils.Core.Configuration.LogOptions" data-throw-if-not-resolved="false"></xref> that are used to setup the logger.
    content.vb: Public Shared Sub Initialize(options As LogOptions)
  overload: AetherUtils.Core.Logging.CLogger.Initialize*
- uid: AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1
  commentId: M:AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1
  id: GetCurrentLogger``1
  parent: AetherUtils.Core.Logging.CLogger
  langs:
  - csharp
  - vb
  name: GetCurrentLogger<T>()
  nameWithType: CLogger.GetCurrentLogger<T>()
  fullName: AetherUtils.Core.Logging.CLogger.GetCurrentLogger<T>()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetCurrentLogger
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 91
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  summary: Get a logger reference based on the type of class.
  example: []
  syntax:
    content: 'public static Logger GetCurrentLogger<T>() where T : class'
    typeParameters:
    - id: T
      description: The class type to get the logger of.
    return:
      type: NLog.Logger
      description: A <xref href="NLog.Logger" data-throw-if-not-resolved="false"></xref> object that can be used for logging. Returns default name if logging has not been initialized via <xref href="AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)" data-throw-if-not-resolved="false"></xref>
    content.vb: Public Shared Function GetCurrentLogger(Of T As Class)() As Logger
  overload: AetherUtils.Core.Logging.CLogger.GetCurrentLogger*
  nameWithType.vb: CLogger.GetCurrentLogger(Of T)()
  fullName.vb: AetherUtils.Core.Logging.CLogger.GetCurrentLogger(Of T)()
  name.vb: GetCurrentLogger(Of T)()
- uid: AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1(System.String)
  commentId: M:AetherUtils.Core.Logging.CLogger.GetCurrentLogger``1(System.String)
  id: GetCurrentLogger``1(System.String)
  parent: AetherUtils.Core.Logging.CLogger
  langs:
  - csharp
  - vb
  name: GetCurrentLogger<T>(string)
  nameWithType: CLogger.GetCurrentLogger<T>(string)
  fullName: AetherUtils.Core.Logging.CLogger.GetCurrentLogger<T>(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetCurrentLogger
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 103
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  summary: Get a logger reference based on the type of class as well as an additional name identifier.
  example: []
  syntax:
    content: 'public static Logger GetCurrentLogger<T>(string name) where T : class'
    parameters:
    - id: name
      type: System.String
      description: The additional name to add to the logger. (i.e., the method name)
    typeParameters:
    - id: T
      description: The class type to get the logger of.
    return:
      type: NLog.Logger
      description: A <xref href="NLog.Logger" data-throw-if-not-resolved="false"></xref> object that can be used for logging. Returns default name if logging has not been initialized.
    content.vb: Public Shared Function GetCurrentLogger(Of T As Class)(name As String) As Logger
  overload: AetherUtils.Core.Logging.CLogger.GetCurrentLogger*
  nameWithType.vb: CLogger.GetCurrentLogger(Of T)(String)
  fullName.vb: AetherUtils.Core.Logging.CLogger.GetCurrentLogger(Of T)(String)
  name.vb: GetCurrentLogger(Of T)(String)
- uid: AetherUtils.Core.Logging.CLogger.GetCurrentLogger(System.String)
  commentId: M:AetherUtils.Core.Logging.CLogger.GetCurrentLogger(System.String)
  id: GetCurrentLogger(System.String)
  parent: AetherUtils.Core.Logging.CLogger
  langs:
  - csharp
  - vb
  name: GetCurrentLogger(string)
  nameWithType: CLogger.GetCurrentLogger(string)
  fullName: AetherUtils.Core.Logging.CLogger.GetCurrentLogger(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Logging/CLogger.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetCurrentLogger
    path: ../AetherUtils.Core/Logging/CLogger.cs
    startLine: 114
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Logging
  summary: Get a logger reference based on the specified name.
  example: []
  syntax:
    content: public static Logger GetCurrentLogger(string name)
    parameters:
    - id: name
      type: System.String
      description: The name of the logger to get.
    return:
      type: NLog.Logger
      description: A <xref href="NLog.Logger" data-throw-if-not-resolved="false"></xref> object that can be used for logging. Returns default name if logging has not been initialized.
    content.vb: Public Shared Function GetCurrentLogger(name As String) As Logger
  overload: AetherUtils.Core.Logging.CLogger.GetCurrentLogger*
  nameWithType.vb: CLogger.GetCurrentLogger(String)
  fullName.vb: AetherUtils.Core.Logging.CLogger.GetCurrentLogger(String)
  name.vb: GetCurrentLogger(String)
references:
- uid: NLog
  commentId: N:NLog
  isExternal: true
  name: NLog
  nameWithType: NLog
  fullName: NLog
- uid: AetherUtils.Core.Logging
  commentId: N:AetherUtils.Core.Logging
  href: AetherUtils.html
  name: AetherUtils.Core.Logging
  nameWithType: AetherUtils.Core.Logging
  fullName: AetherUtils.Core.Logging
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Logging
    name: Logging
    href: AetherUtils.Core.Logging.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Logging
    name: Logging
    href: AetherUtils.Core.Logging.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Logging.CLogger.IsInitialized*
  commentId: Overload:AetherUtils.Core.Logging.CLogger.IsInitialized
  href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_IsInitialized
  name: IsInitialized
  nameWithType: CLogger.IsInitialized
  fullName: AetherUtils.Core.Logging.CLogger.IsInitialized
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AetherUtils.Core.Configuration.LogOptions
  commentId: T:AetherUtils.Core.Configuration.LogOptions
  parent: AetherUtils.Core.Configuration
  href: AetherUtils.Core.Configuration.LogOptions.html
  name: LogOptions
  nameWithType: LogOptions
  fullName: AetherUtils.Core.Configuration.LogOptions
- uid: AetherUtils.Core.Logging.CLogger.Initialize*
  commentId: Overload:AetherUtils.Core.Logging.CLogger.Initialize
  href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_Initialize_AetherUtils_Core_Configuration_LogOptions_
  name: Initialize
  nameWithType: CLogger.Initialize
  fullName: AetherUtils.Core.Logging.CLogger.Initialize
- uid: AetherUtils.Core.Configuration
  commentId: N:AetherUtils.Core.Configuration
  href: AetherUtils.html
  name: AetherUtils.Core.Configuration
  nameWithType: AetherUtils.Core.Configuration
  fullName: AetherUtils.Core.Configuration
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
- uid: NLog.Logger
  commentId: T:NLog.Logger
  parent: NLog
  isExternal: true
  name: Logger
  nameWithType: Logger
  fullName: NLog.Logger
- uid: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  commentId: M:AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_Initialize_AetherUtils_Core_Configuration_LogOptions_
  name: Initialize(LogOptions)
  nameWithType: CLogger.Initialize(LogOptions)
  fullName: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
  spec.csharp:
  - uid: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
    name: Initialize
    href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_Initialize_AetherUtils_Core_Configuration_LogOptions_
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Logging.CLogger.Initialize(AetherUtils.Core.Configuration.LogOptions)
    name: Initialize
    href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_Initialize_AetherUtils_Core_Configuration_LogOptions_
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
- uid: AetherUtils.Core.Logging.CLogger.GetCurrentLogger*
  commentId: Overload:AetherUtils.Core.Logging.CLogger.GetCurrentLogger
  href: AetherUtils.Core.Logging.CLogger.html#AetherUtils_Core_Logging_CLogger_GetCurrentLogger__1
  name: GetCurrentLogger
  nameWithType: CLogger.GetCurrentLogger
  fullName: AetherUtils.Core.Logging.CLogger.GetCurrentLogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
