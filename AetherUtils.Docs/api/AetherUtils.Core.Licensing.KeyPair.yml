### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Licensing.KeyPair
  commentId: T:AetherUtils.Core.Licensing.KeyPair
  id: KeyPair
  parent: AetherUtils.Core.Licensing
  children:
  - AetherUtils.Core.Licensing.KeyPair.#ctor(System.String,System.String)
  - AetherUtils.Core.Licensing.KeyPair.PrivateKey
  - AetherUtils.Core.Licensing.KeyPair.PublicKey
  langs:
  - csharp
  - vb
  name: KeyPair
  nameWithType: KeyPair
  fullName: AetherUtils.Core.Licensing.KeyPair
  type: Struct
  source:
    remote:
      path: AetherUtils.Core/Licensing/KeyPair.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: KeyPair
    path: ../AetherUtils.Core/Licensing/KeyPair.cs
    startLine: 7
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing
  summary: Stores a read-only pair of keys.
  example: []
  syntax:
    content: public readonly struct KeyPair
    content.vb: Public Structure KeyPair
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
- uid: AetherUtils.Core.Licensing.KeyPair.#ctor(System.String,System.String)
  commentId: M:AetherUtils.Core.Licensing.KeyPair.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: AetherUtils.Core.Licensing.KeyPair
  langs:
  - csharp
  - vb
  name: KeyPair(string, string)
  nameWithType: KeyPair.KeyPair(string, string)
  fullName: AetherUtils.Core.Licensing.KeyPair.KeyPair(string, string)
  type: Constructor
  source:
    remote:
      path: AetherUtils.Core/Licensing/KeyPair.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: .ctor
    path: ../AetherUtils.Core/Licensing/KeyPair.cs
    startLine: 7
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing
  summary: Stores a read-only pair of keys.
  example: []
  syntax:
    content: public KeyPair(string privateKey, string publicKey)
    parameters:
    - id: privateKey
      type: System.String
      description: The private key.
    - id: publicKey
      type: System.String
      description: The public key.
    content.vb: Public Sub New(privateKey As String, publicKey As String)
  overload: AetherUtils.Core.Licensing.KeyPair.#ctor*
  nameWithType.vb: KeyPair.New(String, String)
  fullName.vb: AetherUtils.Core.Licensing.KeyPair.New(String, String)
  name.vb: New(String, String)
- uid: AetherUtils.Core.Licensing.KeyPair.PrivateKey
  commentId: P:AetherUtils.Core.Licensing.KeyPair.PrivateKey
  id: PrivateKey
  parent: AetherUtils.Core.Licensing.KeyPair
  langs:
  - csharp
  - vb
  name: PrivateKey
  nameWithType: KeyPair.PrivateKey
  fullName: AetherUtils.Core.Licensing.KeyPair.PrivateKey
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/KeyPair.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: PrivateKey
    path: ../AetherUtils.Core/Licensing/KeyPair.cs
    startLine: 12
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing
  summary: The private key component of the key pair.
  example: []
  syntax:
    content: public string PrivateKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PrivateKey As String
  overload: AetherUtils.Core.Licensing.KeyPair.PrivateKey*
- uid: AetherUtils.Core.Licensing.KeyPair.PublicKey
  commentId: P:AetherUtils.Core.Licensing.KeyPair.PublicKey
  id: PublicKey
  parent: AetherUtils.Core.Licensing.KeyPair
  langs:
  - csharp
  - vb
  name: PublicKey
  nameWithType: KeyPair.PublicKey
  fullName: AetherUtils.Core.Licensing.KeyPair.PublicKey
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/KeyPair.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: PublicKey
    path: ../AetherUtils.Core/Licensing/KeyPair.cs
    startLine: 17
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing
  summary: The public key component of the key pair.
  example: []
  syntax:
    content: public string PublicKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PublicKey As String
  overload: AetherUtils.Core.Licensing.KeyPair.PublicKey*
references:
- uid: AetherUtils.Core.Licensing
  commentId: N:AetherUtils.Core.Licensing
  href: AetherUtils.html
  name: AetherUtils.Core.Licensing
  nameWithType: AetherUtils.Core.Licensing
  fullName: AetherUtils.Core.Licensing
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Licensing
    name: Licensing
    href: AetherUtils.Core.Licensing.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Licensing
    name: Licensing
    href: AetherUtils.Core.Licensing.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Licensing.KeyPair.#ctor*
  commentId: Overload:AetherUtils.Core.Licensing.KeyPair.#ctor
  href: AetherUtils.Core.Licensing.KeyPair.html#AetherUtils_Core_Licensing_KeyPair__ctor_System_String_System_String_
  name: KeyPair
  nameWithType: KeyPair.KeyPair
  fullName: AetherUtils.Core.Licensing.KeyPair.KeyPair
  nameWithType.vb: KeyPair.New
  fullName.vb: AetherUtils.Core.Licensing.KeyPair.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Licensing.KeyPair.PrivateKey*
  commentId: Overload:AetherUtils.Core.Licensing.KeyPair.PrivateKey
  href: AetherUtils.Core.Licensing.KeyPair.html#AetherUtils_Core_Licensing_KeyPair_PrivateKey
  name: PrivateKey
  nameWithType: KeyPair.PrivateKey
  fullName: AetherUtils.Core.Licensing.KeyPair.PrivateKey
- uid: AetherUtils.Core.Licensing.KeyPair.PublicKey*
  commentId: Overload:AetherUtils.Core.Licensing.KeyPair.PublicKey
  href: AetherUtils.Core.Licensing.KeyPair.html#AetherUtils_Core_Licensing_KeyPair_PublicKey
  name: PublicKey
  nameWithType: KeyPair.PublicKey
  fullName: AetherUtils.Core.Licensing.KeyPair.PublicKey
shouldSkipMarkup: true
