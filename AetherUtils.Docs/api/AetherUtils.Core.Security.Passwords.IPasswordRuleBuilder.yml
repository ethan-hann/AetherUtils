### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  commentId: T:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  id: IPasswordRuleBuilder
  parent: AetherUtils.Core.Security.Passwords
  children:
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires(System.DateTime)
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength(System.Int32)
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount(System.Int32)
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount(System.Int32)
  langs:
  - csharp
  - vb
  name: IPasswordRuleBuilder
  nameWithType: IPasswordRuleBuilder
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  type: Interface
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IPasswordRuleBuilder
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 7
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Builder interface for creating a new <xref href="AetherUtils.Core.Security.Passwords.PasswordRule" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public interface IPasswordRuleBuilder
    content.vb: Public Interface IPasswordRuleBuilder
  extensionMethods:
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace
  id: AllowWhitespace
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: AllowWhitespace()
  nameWithType: IPasswordRuleBuilder.AllowWhitespace()
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: AllowWhitespace
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 13
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Allows the password to contain whitespace.
  example: []
  syntax:
    content: IPasswordRuleBuilder AllowWhitespace()
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function AllowWhitespace() As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace*
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials
  id: AllowSpecials
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: AllowSpecials()
  nameWithType: IPasswordRuleBuilder.AllowSpecials()
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: AllowSpecials
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 19
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Allows the password to contain special characters.
  example: []
  syntax:
    content: IPasswordRuleBuilder AllowSpecials()
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function AllowSpecials() As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials*
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers
  id: AllowNumbers
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: AllowNumbers()
  nameWithType: IPasswordRuleBuilder.AllowNumbers()
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: AllowNumbers
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 25
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Allows the password to contain numbers.
  example: []
  syntax:
    content: IPasswordRuleBuilder AllowNumbers()
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function AllowNumbers() As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers*
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength(System.Int32)
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength(System.Int32)
  id: MinimumLength(System.Int32)
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: MinimumLength(int)
  nameWithType: IPasswordRuleBuilder.MinimumLength(int)
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength(int)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: MinimumLength
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 31
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Set the minimum length a password should be.
  example: []
  syntax:
    content: IPasswordRuleBuilder MinimumLength(int length)
    parameters:
    - id: length
      type: System.Int32
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function MinimumLength(length As Integer) As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength*
  nameWithType.vb: IPasswordRuleBuilder.MinimumLength(Integer)
  fullName.vb: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength(Integer)
  name.vb: MinimumLength(Integer)
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount(System.Int32)
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount(System.Int32)
  id: MinimumNumberCount(System.Int32)
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: MinimumNumberCount(int)
  nameWithType: IPasswordRuleBuilder.MinimumNumberCount(int)
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount(int)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: MinimumNumberCount
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 38
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Set the minimum count of numbers a password should contain.
  example: []
  syntax:
    content: IPasswordRuleBuilder MinimumNumberCount(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The minimum number of digits allowed.
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function MinimumNumberCount(count As Integer) As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount*
  nameWithType.vb: IPasswordRuleBuilder.MinimumNumberCount(Integer)
  fullName.vb: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount(Integer)
  name.vb: MinimumNumberCount(Integer)
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount(System.Int32)
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount(System.Int32)
  id: MinimumSpecialCount(System.Int32)
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: MinimumSpecialCount(int)
  nameWithType: IPasswordRuleBuilder.MinimumSpecialCount(int)
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount(int)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: MinimumSpecialCount
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 45
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Set the minimum count of special characters a password should contain.
  example: []
  syntax:
    content: IPasswordRuleBuilder MinimumSpecialCount(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The minimum number of special characters allowed.
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function MinimumSpecialCount(count As Integer) As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount*
  nameWithType.vb: IPasswordRuleBuilder.MinimumSpecialCount(Integer)
  fullName.vb: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount(Integer)
  name.vb: MinimumSpecialCount(Integer)
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires(System.DateTime)
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires(System.DateTime)
  id: Expires(System.DateTime)
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: Expires(DateTime)
  nameWithType: IPasswordRuleBuilder.Expires(DateTime)
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires(System.DateTime)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Expires
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 52
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Set the date that a password should expire at.
  example: []
  syntax:
    content: IPasswordRuleBuilder Expires(DateTime expires)
    parameters:
    - id: expires
      type: System.DateTime
      description: The expiration expires of passwords validated against the rule.
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Function Expires(expires As Date) As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires*
  nameWithType.vb: IPasswordRuleBuilder.Expires(Date)
  fullName.vb: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires(Date)
  name.vb: Expires(Date)
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build
  commentId: M:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build
  id: Build
  parent: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  langs:
  - csharp
  - vb
  name: Build()
  nameWithType: IPasswordRuleBuilder.Build()
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Build
    path: ../AetherUtils.Core/Security/Passwords/IPasswordRuleBuilder.cs
    startLine: 58
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Build and compile the password rule.
  example: []
  syntax:
    content: PasswordRule Build()
    return:
      type: AetherUtils.Core.Security.Passwords.PasswordRule
      description: The built <xref href="AetherUtils.Core.Security.Passwords.PasswordRule" data-throw-if-not-resolved="false"></xref>.
    content.vb: Function Build() As PasswordRule
  overload: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build*
references:
- uid: AetherUtils.Core.Security.Passwords.PasswordRule
  commentId: T:AetherUtils.Core.Security.Passwords.PasswordRule
  parent: AetherUtils.Core.Security.Passwords
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  name: PasswordRule
  nameWithType: PasswordRule
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule
- uid: AetherUtils.Core.Security.Passwords
  commentId: N:AetherUtils.Core.Security.Passwords
  href: AetherUtils.html
  name: AetherUtils.Core.Security.Passwords
  nameWithType: AetherUtils.Core.Security.Passwords
  fullName: AetherUtils.Core.Security.Passwords
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  nameWithType: TypeExtensions.CanSerializeJson<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder>(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  name.vb: CanSerializeJson(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  nameWithType: TypeExtensions.CanSerializeXml<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder>(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  name.vb: CanSerializeXml(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  nameWithType: TypeExtensions.SerializeJson<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder>(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  nameWithType.vb: TypeExtensions.SerializeJson(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  name.vb: SerializeJson(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  nameWithType: TypeExtensions.SerializeXml<IPasswordRuleBuilder>(IPasswordRuleBuilder)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder>(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  nameWithType.vb: TypeExtensions.SerializeXml(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
  name.vb: SerializeXml(Of IPasswordRuleBuilder)(IPasswordRuleBuilder)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
    name: IPasswordRuleBuilder
    href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_AllowWhitespace
  name: AllowWhitespace
  nameWithType: IPasswordRuleBuilder.AllowWhitespace
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowWhitespace
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  commentId: T:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  parent: AetherUtils.Core.Security.Passwords
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  name: IPasswordRuleBuilder
  nameWithType: IPasswordRuleBuilder
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_AllowSpecials
  name: AllowSpecials
  nameWithType: IPasswordRuleBuilder.AllowSpecials
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowSpecials
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_AllowNumbers
  name: AllowNumbers
  nameWithType: IPasswordRuleBuilder.AllowNumbers
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.AllowNumbers
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_MinimumLength_System_Int32_
  name: MinimumLength
  nameWithType: IPasswordRuleBuilder.MinimumLength
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumLength
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_MinimumNumberCount_System_Int32_
  name: MinimumNumberCount
  nameWithType: IPasswordRuleBuilder.MinimumNumberCount
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumNumberCount
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_MinimumSpecialCount_System_Int32_
  name: MinimumSpecialCount
  nameWithType: IPasswordRuleBuilder.MinimumSpecialCount
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.MinimumSpecialCount
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_Expires_System_DateTime_
  name: Expires
  nameWithType: IPasswordRuleBuilder.Expires
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Expires
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build*
  commentId: Overload:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html#AetherUtils_Core_Security_Passwords_IPasswordRuleBuilder_Build
  name: Build
  nameWithType: IPasswordRuleBuilder.Build
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.Build
