### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Files.Json`1
  commentId: T:AetherUtils.Core.Files.Json`1
  id: Json`1
  parent: AetherUtils.Core.Files
  children:
  - AetherUtils.Core.Files.Json`1.#ctor
  - AetherUtils.Core.Files.Json`1.FromJson(System.String)
  - AetherUtils.Core.Files.Json`1.LoadJson(System.String)
  - AetherUtils.Core.Files.Json`1.ResetWriters
  - AetherUtils.Core.Files.Json`1.SaveJson(System.String,`0)
  - AetherUtils.Core.Files.Json`1.ToJson(`0)
  - AetherUtils.Core.Files.Json`1._serializer
  - AetherUtils.Core.Files.Json`1._stringBuilder
  - AetherUtils.Core.Files.Json`1._stringWriter
  langs:
  - csharp
  - vb
  name: Json<T>
  nameWithType: Json<T>
  fullName: AetherUtils.Core.Files.Json<T>
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Json
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 11
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  summary: Implements serializing and de-serializing generic object types to/from JSON files.
  remarks: <code class="typeparamref">T</code> must support JSON serialization.
  example: []
  syntax:
    content: 'public sealed class Json<T> where T : class'
    typeParameters:
    - id: T
      description: The type of object to serialize/deserialize.
    content.vb: Public NotInheritable Class Json(Of T As Class)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  nameWithType.vb: Json(Of T)
  fullName.vb: AetherUtils.Core.Files.Json(Of T)
  name.vb: Json(Of T)
- uid: AetherUtils.Core.Files.Json`1._serializer
  commentId: F:AetherUtils.Core.Files.Json`1._serializer
  id: _serializer
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: _serializer
  nameWithType: Json<T>._serializer
  fullName: AetherUtils.Core.Files.Json<T>._serializer
  type: Field
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: _serializer
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 13
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: private readonly JsonSerializer _serializer
    return:
      type: Newtonsoft.Json.JsonSerializer
    content.vb: Private ReadOnly _serializer As JsonSerializer
  nameWithType.vb: Json(Of T)._serializer
  fullName.vb: AetherUtils.Core.Files.Json(Of T)._serializer
- uid: AetherUtils.Core.Files.Json`1._stringBuilder
  commentId: F:AetherUtils.Core.Files.Json`1._stringBuilder
  id: _stringBuilder
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: _stringBuilder
  nameWithType: Json<T>._stringBuilder
  fullName: AetherUtils.Core.Files.Json<T>._stringBuilder
  type: Field
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: _stringBuilder
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 14
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: private StringBuilder _stringBuilder
    return:
      type: System.Text.StringBuilder
    content.vb: Private _stringBuilder As StringBuilder
  nameWithType.vb: Json(Of T)._stringBuilder
  fullName.vb: AetherUtils.Core.Files.Json(Of T)._stringBuilder
- uid: AetherUtils.Core.Files.Json`1._stringWriter
  commentId: F:AetherUtils.Core.Files.Json`1._stringWriter
  id: _stringWriter
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: _stringWriter
  nameWithType: Json<T>._stringWriter
  fullName: AetherUtils.Core.Files.Json<T>._stringWriter
  type: Field
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: _stringWriter
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 15
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: private StringWriter _stringWriter
    return:
      type: System.IO.StringWriter
    content.vb: Private _stringWriter As StringWriter
  nameWithType.vb: Json(Of T)._stringWriter
  fullName.vb: AetherUtils.Core.Files.Json(Of T)._stringWriter
- uid: AetherUtils.Core.Files.Json`1.#ctor
  commentId: M:AetherUtils.Core.Files.Json`1.#ctor
  id: '#ctor'
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: Json()
  nameWithType: Json<T>.Json()
  fullName: AetherUtils.Core.Files.Json<T>.Json()
  type: Constructor
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: .ctor
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 17
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: public Json()
    content.vb: Public Sub New()
  overload: AetherUtils.Core.Files.Json`1.#ctor*
  nameWithType.vb: Json(Of T).New()
  fullName.vb: AetherUtils.Core.Files.Json(Of T).New()
  name.vb: New()
- uid: AetherUtils.Core.Files.Json`1.SaveJson(System.String,`0)
  commentId: M:AetherUtils.Core.Files.Json`1.SaveJson(System.String,`0)
  id: SaveJson(System.String,`0)
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: SaveJson(string, T)
  nameWithType: Json<T>.SaveJson(string, T)
  fullName: AetherUtils.Core.Files.Json<T>.SaveJson(string, T)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: SaveJson
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 37
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  summary: >-
    Serialize a .NET object, <code class="typeparamref">T</code>, to a JSON string and save to a file.

    <p>If the file already exists, it is overwritten.</p>
  example: []
  syntax:
    content: public bool SaveJson(string filePath, T obj)
    parameters:
    - id: filePath
      type: System.String
      description: The file to save.
    - id: obj
      type: '{T}'
      description: The .NET object to serialize and save.
    return:
      type: System.Boolean
      description: <code>true</code> if the object was serialized and the file was saved; <code>false</code> otherwise.
    content.vb: Public Function SaveJson(filePath As String, obj As T) As Boolean
  overload: AetherUtils.Core.Files.Json`1.SaveJson*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If the <code class="paramref">filePath</code> was <code>null</code> or empty.
  nameWithType.vb: Json(Of T).SaveJson(String, T)
  fullName.vb: AetherUtils.Core.Files.Json(Of T).SaveJson(String, T)
  name.vb: SaveJson(String, T)
- uid: AetherUtils.Core.Files.Json`1.ToJson(`0)
  commentId: M:AetherUtils.Core.Files.Json`1.ToJson(`0)
  id: ToJson(`0)
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: ToJson(T)
  nameWithType: Json<T>.ToJson(T)
  fullName: AetherUtils.Core.Files.Json<T>.ToJson(T)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ToJson
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 49
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: public string ToJson(T obj)
    parameters:
    - id: obj
      type: '{T}'
    return:
      type: System.String
    content.vb: Public Function ToJson(obj As T) As String
  overload: AetherUtils.Core.Files.Json`1.ToJson*
  nameWithType.vb: Json(Of T).ToJson(T)
  fullName.vb: AetherUtils.Core.Files.Json(Of T).ToJson(T)
- uid: AetherUtils.Core.Files.Json`1.FromJson(System.String)
  commentId: M:AetherUtils.Core.Files.Json`1.FromJson(System.String)
  id: FromJson(System.String)
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: FromJson(string)
  nameWithType: Json<T>.FromJson(string)
  fullName: AetherUtils.Core.Files.Json<T>.FromJson(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: FromJson
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 61
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: public T? FromJson(string json)
    parameters:
    - id: json
      type: System.String
    return:
      type: '{T}'
    content.vb: Public Function FromJson(json As String) As T
  overload: AetherUtils.Core.Files.Json`1.FromJson*
  nameWithType.vb: Json(Of T).FromJson(String)
  fullName.vb: AetherUtils.Core.Files.Json(Of T).FromJson(String)
  name.vb: FromJson(String)
- uid: AetherUtils.Core.Files.Json`1.LoadJson(System.String)
  commentId: M:AetherUtils.Core.Files.Json`1.LoadJson(System.String)
  id: LoadJson(System.String)
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: LoadJson(string)
  nameWithType: Json<T>.LoadJson(string)
  fullName: AetherUtils.Core.Files.Json<T>.LoadJson(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LoadJson
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 78
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  summary: Deserialize and load a .NET object from a JSON file.
  example: []
  syntax:
    content: public T? LoadJson(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: The file to load.
    return:
      type: '{T}'
      description: The <code class="typeparamref">T</code> object, or <code>null</code> if the object could not be deserialized.
    content.vb: Public Function LoadJson(filePath As String) As T
  overload: AetherUtils.Core.Files.Json`1.LoadJson*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: If <code class="paramref">filePath</code> was <code>null</code> or empty.
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: If the filePath did not exist.
  nameWithType.vb: Json(Of T).LoadJson(String)
  fullName.vb: AetherUtils.Core.Files.Json(Of T).LoadJson(String)
  name.vb: LoadJson(String)
- uid: AetherUtils.Core.Files.Json`1.ResetWriters
  commentId: M:AetherUtils.Core.Files.Json`1.ResetWriters
  id: ResetWriters
  parent: AetherUtils.Core.Files.Json`1
  langs:
  - csharp
  - vb
  name: ResetWriters()
  nameWithType: Json<T>.ResetWriters()
  fullName: AetherUtils.Core.Files.Json<T>.ResetWriters()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Files/Json.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ResetWriters
    path: ../AetherUtils.Core/Files/Json.cs
    startLine: 91
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Files
  syntax:
    content: private void ResetWriters()
    content.vb: Private Sub ResetWriters()
  overload: AetherUtils.Core.Files.Json`1.ResetWriters*
  nameWithType.vb: Json(Of T).ResetWriters()
  fullName.vb: AetherUtils.Core.Files.Json(Of T).ResetWriters()
references:
- uid: AetherUtils.Core.Files
  commentId: N:AetherUtils.Core.Files
  href: AetherUtils.html
  name: AetherUtils.Core.Files
  nameWithType: AetherUtils.Core.Files
  fullName: AetherUtils.Core.Files
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Files
    name: Files
    href: AetherUtils.Core.Files.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Files
    name: Files
    href: AetherUtils.Core.Files.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<Json<T>>(Json<T>)
  nameWithType: TypeExtensions.CanSerializeJson<Json<T>>(Json<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Files.Json<T>>(AetherUtils.Core.Files.Json<T>)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of Json(Of T))(Json(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Files.Json(Of T))(AetherUtils.Core.Files.Json(Of T))
  name.vb: CanSerializeJson(Of Json(Of T))(Json(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Files.Json{`0})
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Files.Json{`0})
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<Json<T>>(Json<T>)
  nameWithType: TypeExtensions.CanSerializeXml<Json<T>>(Json<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Files.Json<T>>(AetherUtils.Core.Files.Json<T>)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of Json(Of T))(Json(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Files.Json(Of T))(AetherUtils.Core.Files.Json(Of T))
  name.vb: CanSerializeXml(Of Json(Of T))(Json(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Files.Json{`0})
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Files.Json{`0})
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<Json<T>>(Json<T>)
  nameWithType: TypeExtensions.SerializeJson<Json<T>>(Json<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Files.Json<T>>(AetherUtils.Core.Files.Json<T>)
  nameWithType.vb: TypeExtensions.SerializeJson(Of Json(Of T))(Json(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Files.Json(Of T))(AetherUtils.Core.Files.Json(Of T))
  name.vb: SerializeJson(Of Json(Of T))(Json(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Files.Json{`0})
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Files.Json{`0})
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Files.Json`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<Json<T>>(Json<T>)
  nameWithType: TypeExtensions.SerializeXml<Json<T>>(Json<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Files.Json<T>>(AetherUtils.Core.Files.Json<T>)
  nameWithType.vb: TypeExtensions.SerializeXml(Of Json(Of T))(Json(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Files.Json(Of T))(AetherUtils.Core.Files.Json(Of T))
  name.vb: SerializeXml(Of Json(Of T))(Json(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Files.Json{`0})
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Files.Json{`0})
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Files.Json`1
    name: Json
    href: AetherUtils.Core.Files.Json-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: Newtonsoft.Json.JsonSerializer
  commentId: T:Newtonsoft.Json.JsonSerializer
  parent: Newtonsoft.Json
  isExternal: true
  name: JsonSerializer
  nameWithType: JsonSerializer
  fullName: Newtonsoft.Json.JsonSerializer
- uid: Newtonsoft.Json
  commentId: N:Newtonsoft.Json
  isExternal: true
  name: Newtonsoft.Json
  nameWithType: Newtonsoft.Json
  fullName: Newtonsoft.Json
  spec.csharp:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
  spec.vb:
  - uid: Newtonsoft
    name: Newtonsoft
    isExternal: true
  - name: .
  - uid: Newtonsoft.Json
    name: Json
    isExternal: true
- uid: System.Text.StringBuilder
  commentId: T:System.Text.StringBuilder
  parent: System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.stringbuilder
  name: StringBuilder
  nameWithType: StringBuilder
  fullName: System.Text.StringBuilder
- uid: System.Text
  commentId: N:System.Text
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text
  nameWithType: System.Text
  fullName: System.Text
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
- uid: System.IO.StringWriter
  commentId: T:System.IO.StringWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stringwriter
  name: StringWriter
  nameWithType: StringWriter
  fullName: System.IO.StringWriter
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: AetherUtils.Core.Files.Json`1.#ctor*
  commentId: Overload:AetherUtils.Core.Files.Json`1.#ctor
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1__ctor
  name: Json
  nameWithType: Json<T>.Json
  fullName: AetherUtils.Core.Files.Json<T>.Json
  nameWithType.vb: Json(Of T).New
  fullName.vb: AetherUtils.Core.Files.Json(Of T).New
  name.vb: New
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: AetherUtils.Core.Files.Json`1.SaveJson*
  commentId: Overload:AetherUtils.Core.Files.Json`1.SaveJson
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1_SaveJson_System_String__0_
  name: SaveJson
  nameWithType: Json<T>.SaveJson
  fullName: AetherUtils.Core.Files.Json<T>.SaveJson
  nameWithType.vb: Json(Of T).SaveJson
  fullName.vb: AetherUtils.Core.Files.Json(Of T).SaveJson
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AetherUtils.Core.Files.Json`1.ToJson*
  commentId: Overload:AetherUtils.Core.Files.Json`1.ToJson
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1_ToJson__0_
  name: ToJson
  nameWithType: Json<T>.ToJson
  fullName: AetherUtils.Core.Files.Json<T>.ToJson
  nameWithType.vb: Json(Of T).ToJson
  fullName.vb: AetherUtils.Core.Files.Json(Of T).ToJson
- uid: AetherUtils.Core.Files.Json`1.FromJson*
  commentId: Overload:AetherUtils.Core.Files.Json`1.FromJson
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1_FromJson_System_String_
  name: FromJson
  nameWithType: Json<T>.FromJson
  fullName: AetherUtils.Core.Files.Json<T>.FromJson
  nameWithType.vb: Json(Of T).FromJson
  fullName.vb: AetherUtils.Core.Files.Json(Of T).FromJson
- uid: System.IO.FileNotFoundException
  commentId: T:System.IO.FileNotFoundException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.filenotfoundexception
  name: FileNotFoundException
  nameWithType: FileNotFoundException
  fullName: System.IO.FileNotFoundException
- uid: AetherUtils.Core.Files.Json`1.LoadJson*
  commentId: Overload:AetherUtils.Core.Files.Json`1.LoadJson
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1_LoadJson_System_String_
  name: LoadJson
  nameWithType: Json<T>.LoadJson
  fullName: AetherUtils.Core.Files.Json<T>.LoadJson
  nameWithType.vb: Json(Of T).LoadJson
  fullName.vb: AetherUtils.Core.Files.Json(Of T).LoadJson
- uid: AetherUtils.Core.Files.Json`1.ResetWriters*
  commentId: Overload:AetherUtils.Core.Files.Json`1.ResetWriters
  href: AetherUtils.Core.Files.Json-1.html#AetherUtils_Core_Files_Json_1_ResetWriters
  name: ResetWriters
  nameWithType: Json<T>.ResetWriters
  fullName: AetherUtils.Core.Files.Json<T>.ResetWriters
  nameWithType.vb: Json(Of T).ResetWriters
  fullName.vb: AetherUtils.Core.Files.Json(Of T).ResetWriters
shouldSkipMarkup: true
