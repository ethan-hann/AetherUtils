### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Structs.Pair`2
  commentId: T:AetherUtils.Core.Structs.Pair`2
  id: Pair`2
  parent: AetherUtils.Core.Structs
  children:
  - AetherUtils.Core.Structs.Pair`2.#ctor(`0,`1)
  - AetherUtils.Core.Structs.Pair`2.Key
  - AetherUtils.Core.Structs.Pair`2.Value
  langs:
  - csharp
  - vb
  name: Pair<TK, TV>
  nameWithType: Pair<TK, TV>
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>
  type: Struct
  source:
    remote:
      path: AetherUtils.Core/Structs/Pair.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Pair
    path: ../AetherUtils.Core/Structs/Pair.cs
    startLine: 7
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  summary: Represents a generic key-value pair.
  example: []
  syntax:
    content: public struct Pair<TK, TV>
    typeParameters:
    - id: TK
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for the key.
    - id: TV
      description: The <xref href="System.Type" data-throw-if-not-resolved="false"></xref> for the value.
    content.vb: Public Structure Pair(Of TK, TV)
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  nameWithType.vb: Pair(Of TK, TV)
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV)
  name.vb: Pair(Of TK, TV)
- uid: AetherUtils.Core.Structs.Pair`2.#ctor(`0,`1)
  commentId: M:AetherUtils.Core.Structs.Pair`2.#ctor(`0,`1)
  id: '#ctor(`0,`1)'
  parent: AetherUtils.Core.Structs.Pair`2
  langs:
  - csharp
  - vb
  name: Pair(TK?, TV?)
  nameWithType: Pair<TK, TV>.Pair(TK?, TV?)
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Pair(TK?, TV?)
  type: Constructor
  source:
    remote:
      path: AetherUtils.Core/Structs/Pair.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: .ctor
    path: ../AetherUtils.Core/Structs/Pair.cs
    startLine: 7
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  summary: Represents a generic key-value pair.
  example: []
  syntax:
    content: public Pair(TK? key, TV? value)
    parameters:
    - id: key
      type: '{TK}'
    - id: value
      type: '{TV}'
    content.vb: Public Sub New(key As TK, value As TV)
  overload: AetherUtils.Core.Structs.Pair`2.#ctor*
  nameWithType.vb: Pair(Of TK, TV).New(TK, TV)
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).New(TK, TV)
  name.vb: New(TK, TV)
- uid: AetherUtils.Core.Structs.Pair`2.Key
  commentId: P:AetherUtils.Core.Structs.Pair`2.Key
  id: Key
  parent: AetherUtils.Core.Structs.Pair`2
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: Pair<TK, TV>.Key
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Key
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/Pair.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Key
    path: ../AetherUtils.Core/Structs/Pair.cs
    startLine: 12
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  summary: The key component of this pair.
  example: []
  syntax:
    content: public TK? Key { readonly get; set; }
    parameters: []
    return:
      type: '{TK}'
    content.vb: Public Property Key As TK
  overload: AetherUtils.Core.Structs.Pair`2.Key*
  nameWithType.vb: Pair(Of TK, TV).Key
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).Key
- uid: AetherUtils.Core.Structs.Pair`2.Value
  commentId: P:AetherUtils.Core.Structs.Pair`2.Value
  id: Value
  parent: AetherUtils.Core.Structs.Pair`2
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Pair<TK, TV>.Value
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Value
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Structs/Pair.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Value
    path: ../AetherUtils.Core/Structs/Pair.cs
    startLine: 17
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Structs
  summary: The value component of this pair.
  example: []
  syntax:
    content: public TV? Value { readonly get; set; }
    parameters: []
    return:
      type: '{TV}'
    content.vb: Public Property Value As TV
  overload: AetherUtils.Core.Structs.Pair`2.Value*
  nameWithType.vb: Pair(Of TK, TV).Value
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).Value
references:
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: AetherUtils.Core.Structs
  commentId: N:AetherUtils.Core.Structs
  href: AetherUtils.html
  name: AetherUtils.Core.Structs
  nameWithType: AetherUtils.Core.Structs
  fullName: AetherUtils.Core.Structs
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Structs
    name: Structs
    href: AetherUtils.Core.Structs.html
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: AetherUtils.Core.Structs.Pair`2.#ctor*
  commentId: Overload:AetherUtils.Core.Structs.Pair`2.#ctor
  href: AetherUtils.Core.Structs.Pair-2.html#AetherUtils_Core_Structs_Pair_2__ctor__0__1_
  name: Pair
  nameWithType: Pair<TK, TV>.Pair
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Pair
  nameWithType.vb: Pair(Of TK, TV).New
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).New
  name.vb: New
- uid: '{TK}'
  commentId: '!:TK'
  definition: TK
  name: TK
  nameWithType: TK
  fullName: TK
- uid: '{TV}'
  commentId: '!:TV'
  definition: TV
  name: TV
  nameWithType: TV
  fullName: TV
- uid: TK
  name: TK
  nameWithType: TK
  fullName: TK
- uid: TV
  name: TV
  nameWithType: TV
  fullName: TV
- uid: AetherUtils.Core.Structs.Pair`2.Key*
  commentId: Overload:AetherUtils.Core.Structs.Pair`2.Key
  href: AetherUtils.Core.Structs.Pair-2.html#AetherUtils_Core_Structs_Pair_2_Key
  name: Key
  nameWithType: Pair<TK, TV>.Key
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Key
  nameWithType.vb: Pair(Of TK, TV).Key
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).Key
- uid: AetherUtils.Core.Structs.Pair`2.Value*
  commentId: Overload:AetherUtils.Core.Structs.Pair`2.Value
  href: AetherUtils.Core.Structs.Pair-2.html#AetherUtils_Core_Structs_Pair_2_Value
  name: Value
  nameWithType: Pair<TK, TV>.Value
  fullName: AetherUtils.Core.Structs.Pair<TK, TV>.Value
  nameWithType.vb: Pair(Of TK, TV).Value
  fullName.vb: AetherUtils.Core.Structs.Pair(Of TK, TV).Value
shouldSkipMarkup: true
