### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Security.Passwords.PasswordRule
  commentId: T:AetherUtils.Core.Security.Passwords.PasswordRule
  id: PasswordRule
  parent: AetherUtils.Core.Security.Passwords
  children:
  - AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString(System.String,System.String)
  - AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword
  - AetherUtils.Core.Security.Passwords.PasswordRule.New
  - AetherUtils.Core.Security.Passwords.PasswordRule.Parse(System.String)
  - AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync(System.String,System.String)
  - AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
  - AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync(System.String,System.String)
  - AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString(System.String)
  - AetherUtils.Core.Security.Passwords.PasswordRule.ToString
  - AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
  langs:
  - csharp
  - vb
  name: PasswordRule
  nameWithType: PasswordRule
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: PasswordRule
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 19
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: >-
    Represents a password rule with various options. A password rule should be built using the

    Rule Builder factory: <xref href="AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder" data-throw-if-not-resolved="false"></xref>.

    <p>This class contains methods to parse and save a password rule to/from a file as well as a

    string.</p>

    <remarks>A password can be validated against a rule using <xref href="AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)" data-throw-if-not-resolved="false"></xref>.</remarks>
  example: []
  syntax:
    content: public sealed class PasswordRule
    content.vb: Public NotInheritable Class PasswordRule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
  commentId: P:AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
  id: PasswordRules
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: PasswordRules
  nameWithType: PasswordRule.PasswordRules
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: PasswordRules
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 32
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Get the string representing this password rule.
  example: []
  syntax:
    content: public string PasswordRules { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PasswordRules As String
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules*
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.New
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.New
  id: New
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: New()
  nameWithType: PasswordRule.New()
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.New()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: New
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 56
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Start building the password rule.
  example: []
  syntax:
    content: public static IPasswordRuleBuilder New()
    return:
      type: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
      description: The builder instance.
    content.vb: Public Shared Function [New]() As IPasswordRuleBuilder
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.New*
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.Parse(System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.Parse(System.String)
  id: Parse(System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: Parse(string)
  nameWithType: PasswordRule.Parse(string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.Parse(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Parse
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 176
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Parse a password rule from a Json string.
  example: []
  syntax:
    content: public static PasswordRule Parse(string json)
    parameters:
    - id: json
      type: System.String
      description: The password rule as Json to parse.
    return:
      type: AetherUtils.Core.Security.Passwords.PasswordRule
      description: The <xref href="AetherUtils.Core.Security.Passwords.PasswordRule" data-throw-if-not-resolved="false"></xref> or <code>null</code> if parsing failed.
    content.vb: Public Shared Function Parse(json As String) As PasswordRule
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.Parse*
  nameWithType.vb: PasswordRule.Parse(String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.Parse(String)
  name.vb: Parse(String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString(System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString(System.String)
  id: ToEncryptedString(System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: ToEncryptedString(string)
  nameWithType: PasswordRule.ToEncryptedString(string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ToEncryptedString
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 183
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Get an encrypted string representing this password rule.
  example: []
  syntax:
    content: public string ToEncryptedString(string passphrase)
    parameters:
    - id: passphrase
      type: System.String
      description: The passphrase used for encryption.
    return:
      type: System.String
      description: A base64 string representing the password rule.
    content.vb: Public Function ToEncryptedString(passphrase As String) As String
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString*
  nameWithType.vb: PasswordRule.ToEncryptedString(String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString(String)
  name.vb: ToEncryptedString(String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString(System.String,System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString(System.String,System.String)
  id: FromEncryptedString(System.String,System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: FromEncryptedString(string, string)
  nameWithType: PasswordRule.FromEncryptedString(string, string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString(string, string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: FromEncryptedString
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 196
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Parse a password rule from an encrypted string.
  example: []
  syntax:
    content: public static PasswordRule FromEncryptedString(string encrypted, string passphrase)
    parameters:
    - id: encrypted
      type: System.String
      description: The encrypted password rule to parse.
    - id: passphrase
      type: System.String
      description: The passphrase used for decryption.
    return:
      type: AetherUtils.Core.Security.Passwords.PasswordRule
      description: The <xref href="AetherUtils.Core.Security.Passwords.PasswordRule" data-throw-if-not-resolved="false"></xref> or <code>null</code> if parsing failed.
    content.vb: Public Shared Function FromEncryptedString(encrypted As String, passphrase As String) As PasswordRule
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString*
  nameWithType.vb: PasswordRule.FromEncryptedString(String, String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString(String, String)
  name.vb: FromEncryptedString(String, String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync(System.String,System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync(System.String,System.String)
  id: SaveToFileAsync(System.String,System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: SaveToFileAsync(string, string)
  nameWithType: PasswordRule.SaveToFileAsync(string, string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync(string, string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: SaveToFileAsync
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 210
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Save the encrypted password rule to a file.
  example: []
  syntax:
    content: public Task<bool> SaveToFileAsync(string filePath, string passphrase)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the file to save; can contain Windows path variables (i.e., <code>%temp%</code>)
    - id: passphrase
      type: System.String
      description: The passphrase used for encryption.
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
      description: <code>true</code> if the password rule saved successfully; <code>false</code> otherwise.
    content.vb: Public Function SaveToFileAsync(filePath As String, passphrase As String) As Task(Of Boolean)
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync*
  nameWithType.vb: PasswordRule.SaveToFileAsync(String, String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync(String, String)
  name.vb: SaveToFileAsync(String, String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync(System.String,System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync(System.String,System.String)
  id: ParseFromFileAsync(System.String,System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: ParseFromFileAsync(string, string)
  nameWithType: PasswordRule.ParseFromFileAsync(string, string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync(string, string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ParseFromFileAsync
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 225
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Parse an encrypted password rule from a file.
  example: []
  syntax:
    content: public static Task<PasswordRule?> ParseFromFileAsync(string filePath, string passphrase)
    parameters:
    - id: filePath
      type: System.String
      description: The path to the file to load; can contain Windows path variables (i.e., <code>%temp%</code>)
    - id: passphrase
      type: System.String
      description: The passphrase used for decryption. Should be the same as the one used for encryption.
    return:
      type: System.Threading.Tasks.Task{AetherUtils.Core.Security.Passwords.PasswordRule}
      description: The <xref href="AetherUtils.Core.Security.Passwords.PasswordRule" data-throw-if-not-resolved="false"></xref> or <code>null</code> if parsing failed.
    content.vb: Public Shared Function ParseFromFileAsync(filePath As String, passphrase As String) As Task(Of PasswordRule)
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync*
  nameWithType.vb: PasswordRule.ParseFromFileAsync(String, String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync(String, String)
  name.vb: ParseFromFileAsync(String, String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword
  id: GetValidPassword
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: GetValidPassword()
  nameWithType: PasswordRule.GetValidPassword()
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetValidPassword
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 246
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Get a random, cryptographically strong password that follows the password rule.
  example: []
  syntax:
    content: public string GetValidPassword()
    return:
      type: System.String
      description: A new, random password that adheres to the password rule created.
    content.vb: Public Function GetValidPassword() As String
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword*
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
  id: Validate(System.String)
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: Validate(string)
  nameWithType: PasswordRule.Validate(string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(string)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Validate
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 444
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Validate a password against this rule.
  example: []
  syntax:
    content: public List<IPasswordValidationFailure> Validate(string password)
    parameters:
    - id: password
      type: System.String
      description: The password to validate.
    return:
      type: System.Collections.Generic.List{AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure}
      description: >-
        A list of <xref href="AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure" data-throw-if-not-resolved="false"></xref> containing the reasons the
            password failed to validate. If this list is empty, the password validated successfully.
    content.vb: Public Function Validate(password As String) As List(Of IPasswordValidationFailure)
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.Validate*
  nameWithType.vb: PasswordRule.Validate(String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(String)
  name.vb: Validate(String)
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ToString
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.ToString
  id: ToString
  parent: AetherUtils.Core.Security.Passwords.PasswordRule
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: PasswordRule.ToString()
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ToString()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Security/Passwords/PasswordRule.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ToString
    path: ../AetherUtils.Core/Security/Passwords/PasswordRule.cs
    startLine: 450
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Security.Passwords
  summary: Get the Json string representing this password rule.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AetherUtils.Core.Security.Passwords.PasswordRule.ToString*
references:
- uid: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  commentId: T:AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
  parent: AetherUtils.Core.Security.Passwords
  href: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder.html
  name: IPasswordRuleBuilder
  nameWithType: IPasswordRuleBuilder
  fullName: AetherUtils.Core.Security.Passwords.IPasswordRuleBuilder
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
  commentId: M:AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
  isExternal: true
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_Validate_System_String_
  name: Validate(string)
  nameWithType: PasswordRule.Validate(string)
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(string)
  nameWithType.vb: PasswordRule.Validate(String)
  fullName.vb: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(String)
  name.vb: Validate(String)
  spec.csharp:
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
    name: Validate
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_Validate_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule.Validate(System.String)
    name: Validate
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_Validate_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: AetherUtils.Core.Security.Passwords
  commentId: N:AetherUtils.Core.Security.Passwords
  href: AetherUtils.html
  name: AetherUtils.Core.Security.Passwords
  nameWithType: AetherUtils.Core.Security.Passwords
  fullName: AetherUtils.Core.Security.Passwords
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<PasswordRule>(PasswordRule)
  nameWithType: TypeExtensions.CanSerializeJson<PasswordRule>(PasswordRule)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Security.Passwords.PasswordRule>(AetherUtils.Core.Security.Passwords.PasswordRule)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of PasswordRule)(PasswordRule)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Security.Passwords.PasswordRule)(AetherUtils.Core.Security.Passwords.PasswordRule)
  name.vb: CanSerializeJson(Of PasswordRule)(PasswordRule)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<PasswordRule>(PasswordRule)
  nameWithType: TypeExtensions.CanSerializeXml<PasswordRule>(PasswordRule)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Security.Passwords.PasswordRule>(AetherUtils.Core.Security.Passwords.PasswordRule)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of PasswordRule)(PasswordRule)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Security.Passwords.PasswordRule)(AetherUtils.Core.Security.Passwords.PasswordRule)
  name.vb: CanSerializeXml(Of PasswordRule)(PasswordRule)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<PasswordRule>(PasswordRule)
  nameWithType: TypeExtensions.SerializeJson<PasswordRule>(PasswordRule)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Security.Passwords.PasswordRule>(AetherUtils.Core.Security.Passwords.PasswordRule)
  nameWithType.vb: TypeExtensions.SerializeJson(Of PasswordRule)(PasswordRule)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Security.Passwords.PasswordRule)(AetherUtils.Core.Security.Passwords.PasswordRule)
  name.vb: SerializeJson(Of PasswordRule)(PasswordRule)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<PasswordRule>(PasswordRule)
  nameWithType: TypeExtensions.SerializeXml<PasswordRule>(PasswordRule)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Security.Passwords.PasswordRule>(AetherUtils.Core.Security.Passwords.PasswordRule)
  nameWithType.vb: TypeExtensions.SerializeXml(Of PasswordRule)(PasswordRule)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Security.Passwords.PasswordRule)(AetherUtils.Core.Security.Passwords.PasswordRule)
  name.vb: SerializeXml(Of PasswordRule)(PasswordRule)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Security.Passwords.PasswordRule)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_PasswordRules
  name: PasswordRules
  nameWithType: PasswordRule.PasswordRules
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.PasswordRules
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.New*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.New
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_New
  name: New
  nameWithType: PasswordRule.New
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.New
- uid: AetherUtils.Core.Security.Passwords.PasswordRule
  commentId: T:AetherUtils.Core.Security.Passwords.PasswordRule
  parent: AetherUtils.Core.Security.Passwords
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  name: PasswordRule
  nameWithType: PasswordRule
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.Parse*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.Parse
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_Parse_System_String_
  name: Parse
  nameWithType: PasswordRule.Parse
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.Parse
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_ToEncryptedString_System_String_
  name: ToEncryptedString
  nameWithType: PasswordRule.ToEncryptedString
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ToEncryptedString
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_FromEncryptedString_System_String_System_String_
  name: FromEncryptedString
  nameWithType: PasswordRule.FromEncryptedString
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.FromEncryptedString
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_SaveToFileAsync_System_String_System_String_
  name: SaveToFileAsync
  nameWithType: PasswordRule.SaveToFileAsync
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.SaveToFileAsync
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_ParseFromFileAsync_System_String_System_String_
  name: ParseFromFileAsync
  nameWithType: PasswordRule.ParseFromFileAsync
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ParseFromFileAsync
- uid: System.Threading.Tasks.Task{AetherUtils.Core.Security.Passwords.PasswordRule}
  commentId: T:System.Threading.Tasks.Task{AetherUtils.Core.Security.Passwords.PasswordRule}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PasswordRule>
  nameWithType: Task<PasswordRule>
  fullName: System.Threading.Tasks.Task<AetherUtils.Core.Security.Passwords.PasswordRule>
  nameWithType.vb: Task(Of PasswordRule)
  fullName.vb: System.Threading.Tasks.Task(Of AetherUtils.Core.Security.Passwords.PasswordRule)
  name.vb: Task(Of PasswordRule)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.PasswordRule
    name: PasswordRule
    href: AetherUtils.Core.Security.Passwords.PasswordRule.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_GetValidPassword
  name: GetValidPassword
  nameWithType: PasswordRule.GetValidPassword
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.GetValidPassword
- uid: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure
  commentId: T:AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure
  parent: AetherUtils.Core.Security.Passwords.Validation
  href: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure.html
  name: IPasswordValidationFailure
  nameWithType: IPasswordValidationFailure
  fullName: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.Validate*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.Validate
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_Validate_System_String_
  name: Validate
  nameWithType: PasswordRule.Validate
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.Validate
- uid: System.Collections.Generic.List{AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure}
  commentId: T:System.Collections.Generic.List{AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<IPasswordValidationFailure>
  nameWithType: List<IPasswordValidationFailure>
  fullName: System.Collections.Generic.List<AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure>
  nameWithType.vb: List(Of IPasswordValidationFailure)
  fullName.vb: System.Collections.Generic.List(Of AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure)
  name.vb: List(Of IPasswordValidationFailure)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure
    name: IPasswordValidationFailure
    href: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure
    name: IPasswordValidationFailure
    href: AetherUtils.Core.Security.Passwords.Validation.IPasswordValidationFailure.html
  - name: )
- uid: AetherUtils.Core.Security.Passwords.Validation
  commentId: N:AetherUtils.Core.Security.Passwords.Validation
  href: AetherUtils.html
  name: AetherUtils.Core.Security.Passwords.Validation
  nameWithType: AetherUtils.Core.Security.Passwords.Validation
  fullName: AetherUtils.Core.Security.Passwords.Validation
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords.Validation
    name: Validation
    href: AetherUtils.Core.Security.Passwords.Validation.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Security
    name: Security
    href: AetherUtils.Core.Security.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords
    name: Passwords
    href: AetherUtils.Core.Security.Passwords.html
  - name: .
  - uid: AetherUtils.Core.Security.Passwords.Validation
    name: Validation
    href: AetherUtils.Core.Security.Passwords.Validation.html
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Security.Passwords.PasswordRule.ToString*
  commentId: Overload:AetherUtils.Core.Security.Passwords.PasswordRule.ToString
  href: AetherUtils.Core.Security.Passwords.PasswordRule.html#AetherUtils_Core_Security_Passwords_PasswordRule_ToString
  name: ToString
  nameWithType: PasswordRule.ToString
  fullName: AetherUtils.Core.Security.Passwords.PasswordRule.ToString
shouldSkipMarkup: true
