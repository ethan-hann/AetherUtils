### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Configuration.DefaultConfig
  commentId: T:AetherUtils.Core.Configuration.DefaultConfig
  id: DefaultConfig
  parent: AetherUtils.Core.Configuration
  children:
  - AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
  - AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
  - AetherUtils.Core.Configuration.DefaultConfig.LogOptions
  langs:
  - csharp
  - vb
  name: DefaultConfig
  nameWithType: DefaultConfig
  fullName: AetherUtils.Core.Configuration.DefaultConfig
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Configuration/DefaultConfig.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: DefaultConfig
    path: ../AetherUtils.Core/Configuration/DefaultConfig.cs
    startLine: 16
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: >-
    A <a href="https://en.wikipedia.org/wiki/Data_transfer_object">DTO</a> representing the default, bare configuration

    of a new application. This class can be used as is,

    or a new class can be created to store the configuration for an application.<br />

    <p>If a new class is needed, it must be a <a href="https://en.wikipedia.org/wiki/Data_transfer_object">DTO</a>

    and it's properties should be marked with <xref href="AetherUtils.Core.Attributes.ConfigAttribute" data-throw-if-not-resolved="false"></xref> attributes in order to be saved and

    loaded from disk by a <xref href="AetherUtils.Core.Configuration.ConfigManager%601" data-throw-if-not-resolved="false"></xref>.</p>

    <remarks>

    This class can contain instances of other <a href="https://en.wikipedia.org/wiki/Data_transfer_object">DTO</a>

    classes so long as those classes also have the <xref href="AetherUtils.Core.Attributes.ConfigAttribute" data-throw-if-not-resolved="false"></xref> on their properties.

    </remarks>
  example: []
  syntax:
    content: public sealed class DefaultConfig
    content.vb: Public NotInheritable Class DefaultConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
- uid: AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
  commentId: P:AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
  id: ConnectionString
  parent: AetherUtils.Core.Configuration.DefaultConfig
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: DefaultConfig.ConnectionString
  fullName: AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/DefaultConfig.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ConnectionString
    path: ../AetherUtils.Core/Configuration/DefaultConfig.cs
    startLine: 21
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: The connection string used for connecting to a database.
  example: []
  syntax:
    content: >-
      [Config("connectionString")]

      public string ConnectionString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("connectionString")>

      Public Property ConnectionString As String
  overload: AetherUtils.Core.Configuration.DefaultConfig.ConnectionString*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connectionString
- uid: AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
  commentId: P:AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
  id: LicenseFile
  parent: AetherUtils.Core.Configuration.DefaultConfig
  langs:
  - csharp
  - vb
  name: LicenseFile
  nameWithType: DefaultConfig.LicenseFile
  fullName: AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/DefaultConfig.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LicenseFile
    path: ../AetherUtils.Core/Configuration/DefaultConfig.cs
    startLine: 27
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: The full path to a valid license file for an application.
  example: []
  syntax:
    content: >-
      [Config("licenseFile")]

      public string LicenseFile { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("licenseFile")>

      Public Property LicenseFile As String
  overload: AetherUtils.Core.Configuration.DefaultConfig.LicenseFile*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: licenseFile
- uid: AetherUtils.Core.Configuration.DefaultConfig.LogOptions
  commentId: P:AetherUtils.Core.Configuration.DefaultConfig.LogOptions
  id: LogOptions
  parent: AetherUtils.Core.Configuration.DefaultConfig
  langs:
  - csharp
  - vb
  name: LogOptions
  nameWithType: DefaultConfig.LogOptions
  fullName: AetherUtils.Core.Configuration.DefaultConfig.LogOptions
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/DefaultConfig.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogOptions
    path: ../AetherUtils.Core/Configuration/DefaultConfig.cs
    startLine: 33
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: A collection of options used for logging.
  example: []
  syntax:
    content: >-
      [Config("logOptions")]

      public LogOptions LogOptions { get; set; }
    parameters: []
    return:
      type: AetherUtils.Core.Configuration.LogOptions
    content.vb: >-
      <Config("logOptions")>

      Public Property LogOptions As LogOptions
  overload: AetherUtils.Core.Configuration.DefaultConfig.LogOptions*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logOptions
references:
- uid: AetherUtils.Core.Attributes.ConfigAttribute
  commentId: T:AetherUtils.Core.Attributes.ConfigAttribute
  parent: AetherUtils.Core.Attributes
  href: AetherUtils.Core.Attributes.ConfigAttribute.html
  name: ConfigAttribute
  nameWithType: ConfigAttribute
  fullName: AetherUtils.Core.Attributes.ConfigAttribute
- uid: AetherUtils.Core.Configuration.ConfigManager`1
  commentId: T:AetherUtils.Core.Configuration.ConfigManager`1
  href: AetherUtils.Core.Configuration.ConfigManager-1.html
  name: ConfigManager<T>
  nameWithType: ConfigManager<T>
  fullName: AetherUtils.Core.Configuration.ConfigManager<T>
  nameWithType.vb: ConfigManager(Of T)
  fullName.vb: AetherUtils.Core.Configuration.ConfigManager(Of T)
  name.vb: ConfigManager(Of T)
  spec.csharp:
  - uid: AetherUtils.Core.Configuration.ConfigManager`1
    name: ConfigManager
    href: AetherUtils.Core.Configuration.ConfigManager-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: AetherUtils.Core.Configuration.ConfigManager`1
    name: ConfigManager
    href: AetherUtils.Core.Configuration.ConfigManager-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AetherUtils.Core.Configuration
  commentId: N:AetherUtils.Core.Configuration
  href: AetherUtils.html
  name: AetherUtils.Core.Configuration
  nameWithType: AetherUtils.Core.Configuration
  fullName: AetherUtils.Core.Configuration
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<DefaultConfig>(DefaultConfig)
  nameWithType: TypeExtensions.CanSerializeJson<DefaultConfig>(DefaultConfig)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Configuration.DefaultConfig>(AetherUtils.Core.Configuration.DefaultConfig)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of DefaultConfig)(DefaultConfig)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Configuration.DefaultConfig)(AetherUtils.Core.Configuration.DefaultConfig)
  name.vb: CanSerializeJson(Of DefaultConfig)(DefaultConfig)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
- uid: AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<DefaultConfig>(DefaultConfig)
  nameWithType: TypeExtensions.CanSerializeXml<DefaultConfig>(DefaultConfig)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Configuration.DefaultConfig>(AetherUtils.Core.Configuration.DefaultConfig)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of DefaultConfig)(DefaultConfig)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Configuration.DefaultConfig)(AetherUtils.Core.Configuration.DefaultConfig)
  name.vb: CanSerializeXml(Of DefaultConfig)(DefaultConfig)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
- uid: AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<DefaultConfig>(DefaultConfig)
  nameWithType: TypeExtensions.SerializeJson<DefaultConfig>(DefaultConfig)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Configuration.DefaultConfig>(AetherUtils.Core.Configuration.DefaultConfig)
  nameWithType.vb: TypeExtensions.SerializeJson(Of DefaultConfig)(DefaultConfig)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Configuration.DefaultConfig)(AetherUtils.Core.Configuration.DefaultConfig)
  name.vb: SerializeJson(Of DefaultConfig)(DefaultConfig)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
- uid: AetherUtils.Core.Configuration.DefaultConfig.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<DefaultConfig>(DefaultConfig)
  nameWithType: TypeExtensions.SerializeXml<DefaultConfig>(DefaultConfig)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Configuration.DefaultConfig>(AetherUtils.Core.Configuration.DefaultConfig)
  nameWithType.vb: TypeExtensions.SerializeXml(Of DefaultConfig)(DefaultConfig)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Configuration.DefaultConfig)(AetherUtils.Core.Configuration.DefaultConfig)
  name.vb: SerializeXml(Of DefaultConfig)(DefaultConfig)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Configuration.DefaultConfig)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.DefaultConfig
    name: DefaultConfig
    href: AetherUtils.Core.Configuration.DefaultConfig.html
  - name: )
- uid: AetherUtils.Core.Attributes
  commentId: N:AetherUtils.Core.Attributes
  href: AetherUtils.html
  name: AetherUtils.Core.Attributes
  nameWithType: AetherUtils.Core.Attributes
  fullName: AetherUtils.Core.Attributes
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Attributes
    name: Attributes
    href: AetherUtils.Core.Attributes.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Attributes
    name: Attributes
    href: AetherUtils.Core.Attributes.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Configuration.DefaultConfig.ConnectionString*
  commentId: Overload:AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
  href: AetherUtils.Core.Configuration.DefaultConfig.html#AetherUtils_Core_Configuration_DefaultConfig_ConnectionString
  name: ConnectionString
  nameWithType: DefaultConfig.ConnectionString
  fullName: AetherUtils.Core.Configuration.DefaultConfig.ConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Configuration.DefaultConfig.LicenseFile*
  commentId: Overload:AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
  href: AetherUtils.Core.Configuration.DefaultConfig.html#AetherUtils_Core_Configuration_DefaultConfig_LicenseFile
  name: LicenseFile
  nameWithType: DefaultConfig.LicenseFile
  fullName: AetherUtils.Core.Configuration.DefaultConfig.LicenseFile
- uid: AetherUtils.Core.Configuration.DefaultConfig.LogOptions*
  commentId: Overload:AetherUtils.Core.Configuration.DefaultConfig.LogOptions
  href: AetherUtils.Core.Configuration.DefaultConfig.html#AetherUtils_Core_Configuration_DefaultConfig_LogOptions
  name: LogOptions
  nameWithType: DefaultConfig.LogOptions
  fullName: AetherUtils.Core.Configuration.DefaultConfig.LogOptions
- uid: AetherUtils.Core.Configuration.LogOptions
  commentId: T:AetherUtils.Core.Configuration.LogOptions
  parent: AetherUtils.Core.Configuration
  href: AetherUtils.Core.Configuration.LogOptions.html
  name: LogOptions
  nameWithType: LogOptions
  fullName: AetherUtils.Core.Configuration.LogOptions
