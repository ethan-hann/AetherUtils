### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.Generated.Utilities
  commentId: T:System.Text.RegularExpressions.Generated.Utilities
  id: Utilities
  parent: System.Text.RegularExpressions.Generated
  children:
  - System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)
  - System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)
  - System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)
  - System.Text.RegularExpressions.Generated.Utilities.s_asciiHexDigits
  - System.Text.RegularExpressions.Generated.Utilities.s_ascii_48500D40000006800000010
  langs:
  - csharp
  - vb
  name: Utilities
  nameWithType: Utilities
  fullName: System.Text.RegularExpressions.Generated.Utilities
  type: Class
  source:
    id: Utilities
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 905
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Helper methods used by generated <xref href="System.Text.RegularExpressions.Regex" data-throw-if-not-resolved="false"></xref>-derived implementations.
  example: []
  syntax:
    content: internal static class Utilities
    content.vb: Friend Module Utilities
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)
  commentId: M:System.Text.RegularExpressions.Generated.Utilities.StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)
  id: StackPop(System.Int32[],System.Int32@,System.Int32@,System.Int32@)
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: StackPop(int[], ref int, out int, out int)
  nameWithType: Utilities.StackPop(int[], ref int, out int, out int)
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPop(int[], ref int, out int, out int)
  type: Method
  source:
    id: StackPop
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 909
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Pops 2 values from the backtracking stack.
  example: []
  syntax:
    content: internal static void StackPop(int[] stack, ref int pos, out int arg0, out int arg1)
    parameters:
    - id: stack
      type: System.Int32[]
    - id: pos
      type: System.Int32
    - id: arg0
      type: System.Int32
    - id: arg1
      type: System.Int32
    content.vb: Friend Shared Sub StackPop(stack As Integer(), pos As Integer, arg0 As Integer, arg1 As Integer)
  overload: System.Text.RegularExpressions.Generated.Utilities.StackPop*
  nameWithType.vb: Utilities.StackPop(Integer(), Integer, Integer, Integer)
  fullName.vb: System.Text.RegularExpressions.Generated.Utilities.StackPop(Integer(), Integer, Integer, Integer)
  name.vb: StackPop(Integer(), Integer, Integer, Integer)
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)
  commentId: M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32)
  id: StackPush(System.Int32[]@,System.Int32@,System.Int32)
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: StackPush(ref int[], ref int, int)
  nameWithType: Utilities.StackPush(ref int[], ref int, int)
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPush(ref int[], ref int, int)
  type: Method
  source:
    id: StackPush
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 917
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Pushes 1 value onto the backtracking stack.
  example: []
  syntax:
    content: internal static void StackPush(ref int[] stack, ref int pos, int arg0)
    parameters:
    - id: stack
      type: System.Int32[]
    - id: pos
      type: System.Int32
    - id: arg0
      type: System.Int32
    content.vb: Friend Shared Sub StackPush(stack As Integer(), pos As Integer, arg0 As Integer)
  overload: System.Text.RegularExpressions.Generated.Utilities.StackPush*
  nameWithType.vb: Utilities.StackPush(Integer(), Integer, Integer)
  fullName.vb: System.Text.RegularExpressions.Generated.Utilities.StackPush(Integer(), Integer, Integer)
  name.vb: StackPush(Integer(), Integer, Integer)
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)
  id: StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: StackPush(ref int[], ref int, int, int)
  nameWithType: Utilities.StackPush(ref int[], ref int, int, int)
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPush(ref int[], ref int, int, int)
  type: Method
  source:
    id: StackPush
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 943
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Pushes 2 values onto the backtracking stack.
  example: []
  syntax:
    content: internal static void StackPush(ref int[] stack, ref int pos, int arg0, int arg1)
    parameters:
    - id: stack
      type: System.Int32[]
    - id: pos
      type: System.Int32
    - id: arg0
      type: System.Int32
    - id: arg1
      type: System.Int32
    content.vb: Friend Shared Sub StackPush(stack As Integer(), pos As Integer, arg0 As Integer, arg1 As Integer)
  overload: System.Text.RegularExpressions.Generated.Utilities.StackPush*
  nameWithType.vb: Utilities.StackPush(Integer(), Integer, Integer, Integer)
  fullName.vb: System.Text.RegularExpressions.Generated.Utilities.StackPush(Integer(), Integer, Integer, Integer)
  name.vb: StackPush(Integer(), Integer, Integer, Integer)
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Text.RegularExpressions.Generated.Utilities.StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)
  id: StackPush(System.Int32[]@,System.Int32@,System.Int32,System.Int32,System.Int32)
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: StackPush(ref int[], ref int, int, int, int)
  nameWithType: Utilities.StackPush(ref int[], ref int, int, int, int)
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPush(ref int[], ref int, int, int, int)
  type: Method
  source:
    id: StackPush
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 970
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Pushes 3 values onto the backtracking stack.
  example: []
  syntax:
    content: internal static void StackPush(ref int[] stack, ref int pos, int arg0, int arg1, int arg2)
    parameters:
    - id: stack
      type: System.Int32[]
    - id: pos
      type: System.Int32
    - id: arg0
      type: System.Int32
    - id: arg1
      type: System.Int32
    - id: arg2
      type: System.Int32
    content.vb: Friend Shared Sub StackPush(stack As Integer(), pos As Integer, arg0 As Integer, arg1 As Integer, arg2 As Integer)
  overload: System.Text.RegularExpressions.Generated.Utilities.StackPush*
  nameWithType.vb: Utilities.StackPush(Integer(), Integer, Integer, Integer, Integer)
  fullName.vb: System.Text.RegularExpressions.Generated.Utilities.StackPush(Integer(), Integer, Integer, Integer, Integer)
  name.vb: StackPush(Integer(), Integer, Integer, Integer, Integer)
- uid: System.Text.RegularExpressions.Generated.Utilities.s_asciiHexDigits
  commentId: F:System.Text.RegularExpressions.Generated.Utilities.s_asciiHexDigits
  id: s_asciiHexDigits
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: s_asciiHexDigits
  nameWithType: Utilities.s_asciiHexDigits
  fullName: System.Text.RegularExpressions.Generated.Utilities.s_asciiHexDigits
  type: Field
  source:
    id: s_asciiHexDigits
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 998
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Supports searching for characters in or not in "0123456789ABCDEFabcdef".
  example: []
  syntax:
    content: internal static readonly SearchValues<char> s_asciiHexDigits
    return:
      type: System.Buffers.SearchValues{System.Char}
    content.vb: Friend Shared ReadOnly s_asciiHexDigits As SearchValues(Of Char)
- uid: System.Text.RegularExpressions.Generated.Utilities.s_ascii_48500D40000006800000010
  commentId: F:System.Text.RegularExpressions.Generated.Utilities.s_ascii_48500D40000006800000010
  id: s_ascii_48500D40000006800000010
  parent: System.Text.RegularExpressions.Generated.Utilities
  langs:
  - csharp
  - vb
  name: s_ascii_48500D40000006800000010
  nameWithType: Utilities.s_ascii_48500D40000006800000010
  fullName: System.Text.RegularExpressions.Generated.Utilities.s_ascii_48500D40000006800000010
  type: Field
  source:
    id: s_ascii_48500D40000006800000010
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 1001
  assemblies:
  - AetherUtils.Core
  namespace: System.Text.RegularExpressions.Generated
  summary: Supports searching for characters in or not in "\"(*/:&lt;&gt;?[]^|".
  example: []
  syntax:
    content: internal static readonly SearchValues<char> s_ascii_48500D40000006800000010
    return:
      type: System.Buffers.SearchValues{System.Char}
    content.vb: Friend Shared ReadOnly s_ascii_48500D40000006800000010 As SearchValues(Of Char)
references:
- uid: System.Text.RegularExpressions.Regex
  commentId: T:System.Text.RegularExpressions.Regex
  parent: System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions.regex
  name: Regex
  nameWithType: Regex
  fullName: System.Text.RegularExpressions.Regex
- uid: System.Text.RegularExpressions.Generated
  commentId: N:System.Text.RegularExpressions.Generated
  href: System.html
  name: System.Text.RegularExpressions.Generated
  nameWithType: System.Text.RegularExpressions.Generated
  fullName: System.Text.RegularExpressions.Generated
  spec.csharp:
  - uid: System
    name: System
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    href: System.Text.html
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    href: System.Text.RegularExpressions.html
  - name: .
  - uid: System.Text.RegularExpressions.Generated
    name: Generated
    href: System.Text.RegularExpressions.Generated.html
  spec.vb:
  - uid: System
    name: System
    href: System.html
  - name: .
  - uid: System.Text
    name: Text
    href: System.Text.html
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    href: System.Text.RegularExpressions.html
  - name: .
  - uid: System.Text.RegularExpressions.Generated
    name: Generated
    href: System.Text.RegularExpressions.Generated.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Text.RegularExpressions
  commentId: N:System.Text.RegularExpressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Text.RegularExpressions
  nameWithType: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Text
    name: Text
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text
  - name: .
  - uid: System.Text.RegularExpressions
    name: RegularExpressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.text.regularexpressions
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPop*
  commentId: Overload:System.Text.RegularExpressions.Generated.Utilities.StackPop
  href: System.Text.RegularExpressions.Generated.Utilities.html#System_Text_RegularExpressions_Generated_Utilities_StackPop_System_Int32___System_Int32__System_Int32__System_Int32__
  name: StackPop
  nameWithType: Utilities.StackPop
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPop
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Text.RegularExpressions.Generated.Utilities.StackPush*
  commentId: Overload:System.Text.RegularExpressions.Generated.Utilities.StackPush
  href: System.Text.RegularExpressions.Generated.Utilities.html#System_Text_RegularExpressions_Generated_Utilities_StackPush_System_Int32____System_Int32__System_Int32_
  name: StackPush
  nameWithType: Utilities.StackPush
  fullName: System.Text.RegularExpressions.Generated.Utilities.StackPush
- uid: System.Buffers.SearchValues{System.Char}
  commentId: T:System.Buffers.SearchValues{System.Char}
  parent: System.Buffers
  definition: System.Buffers.SearchValues`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  name: SearchValues<char>
  nameWithType: SearchValues<char>
  fullName: System.Buffers.SearchValues<char>
  nameWithType.vb: SearchValues(Of Char)
  fullName.vb: System.Buffers.SearchValues(Of Char)
  name.vb: SearchValues(Of Char)
  spec.csharp:
  - uid: System.Buffers.SearchValues`1
    name: SearchValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  spec.vb:
  - uid: System.Buffers.SearchValues`1
    name: SearchValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.Buffers.SearchValues`1
  commentId: T:System.Buffers.SearchValues`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  name: SearchValues<T>
  nameWithType: SearchValues<T>
  fullName: System.Buffers.SearchValues<T>
  nameWithType.vb: SearchValues(Of T)
  fullName.vb: System.Buffers.SearchValues(Of T)
  name.vb: SearchValues(Of T)
  spec.csharp:
  - uid: System.Buffers.SearchValues`1
    name: SearchValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.SearchValues`1
    name: SearchValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.searchvalues-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
shouldSkipMarkup: true
