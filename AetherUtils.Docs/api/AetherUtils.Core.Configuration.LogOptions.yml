### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Configuration.LogOptions
  commentId: T:AetherUtils.Core.Configuration.LogOptions
  id: LogOptions
  parent: AetherUtils.Core.Configuration
  children:
  - AetherUtils.Core.Configuration.LogOptions.AppName
  - AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
  - AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
  - AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
  - AetherUtils.Core.Configuration.LogOptions.LogFooter
  - AetherUtils.Core.Configuration.LogOptions.LogHeader
  - AetherUtils.Core.Configuration.LogOptions.LogLayout
  - AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
  - AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
  langs:
  - csharp
  - vb
  name: LogOptions
  nameWithType: LogOptions
  fullName: AetherUtils.Core.Configuration.LogOptions
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogOptions
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 8
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: >-
    A <a href="https://en.wikipedia.org/wiki/Data_transfer_object">DTO</a> representing options for how log

    files are handled and formatted for an application.
  example: []
  syntax:
    content: public sealed class LogOptions
    content.vb: Public NotInheritable Class LogOptions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
- uid: AetherUtils.Core.Configuration.LogOptions.AppName
  commentId: P:AetherUtils.Core.Configuration.LogOptions.AppName
  id: AppName
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: AppName
  nameWithType: LogOptions.AppName
  fullName: AetherUtils.Core.Configuration.LogOptions.AppName
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: AppName
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 13
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: The name of the application doing the logging.
  example: []
  syntax:
    content: >-
      [Config("appName")]

      public string AppName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("appName")>

      Public Property AppName As String
  overload: AetherUtils.Core.Configuration.LogOptions.AppName*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: appName
- uid: AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
  commentId: P:AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
  id: LogFileDirectory
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: LogFileDirectory
  nameWithType: LogOptions.LogFileDirectory
  fullName: AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogFileDirectory
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 19
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: The directory that the log file should be saved to.
  example: []
  syntax:
    content: >-
      [Config("logFileDirectory")]

      public string LogFileDirectory { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("logFileDirectory")>

      Public Property LogFileDirectory As String
  overload: AetherUtils.Core.Configuration.LogOptions.LogFileDirectory*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logFileDirectory
- uid: AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
  commentId: P:AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
  id: IncludeDateTime
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: IncludeDateTime
  nameWithType: LogOptions.IncludeDateTime
  fullName: AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IncludeDateTime
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 25
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Indicates if the log file name should include the current formatted <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref> the file was created.
  example: []
  syntax:
    content: >-
      [Config("includeDateTime")]

      public bool IncludeDateTime { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Config("includeDateTime")>

      Public Property IncludeDateTime As Boolean
  overload: AetherUtils.Core.Configuration.LogOptions.IncludeDateTime*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: includeDateTime
- uid: AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
  commentId: P:AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
  id: IncludeDateOnly
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: IncludeDateOnly
  nameWithType: LogOptions.IncludeDateOnly
  fullName: AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IncludeDateOnly
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 31
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Indicates if the log file name should include the date only, instead of the full formatted <xref href="System.DateTime" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: >-
      [Config("includeDateOnly")]

      public bool IncludeDateOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Config("includeDateOnly")>

      Public Property IncludeDateOnly As Boolean
  overload: AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: includeDateOnly
- uid: AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
  commentId: P:AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
  id: NewFileEveryLaunch
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: NewFileEveryLaunch
  nameWithType: LogOptions.NewFileEveryLaunch
  fullName: AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: NewFileEveryLaunch
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 37
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Indicates whether a new log file should be created for every new launch of the application.
  example: []
  syntax:
    content: >-
      [Config("newFileEveryLaunch")]

      public bool NewFileEveryLaunch { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Config("newFileEveryLaunch")>

      Public Property NewFileEveryLaunch As Boolean
  overload: AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: newFileEveryLaunch
- uid: AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
  commentId: P:AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
  id: WriteLogToConsole
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: WriteLogToConsole
  nameWithType: LogOptions.WriteLogToConsole
  fullName: AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: WriteLogToConsole
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 43
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Indicates whether the log should write to the system console in addition to a log file.
  example: []
  syntax:
    content: >-
      [Config("writeLogToConsole")]

      public bool WriteLogToConsole { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Config("writeLogToConsole")>

      Public Property WriteLogToConsole As Boolean
  overload: AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: writeLogToConsole
- uid: AetherUtils.Core.Configuration.LogOptions.LogLayout
  commentId: P:AetherUtils.Core.Configuration.LogOptions.LogLayout
  id: LogLayout
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: LogLayout
  nameWithType: LogOptions.LogLayout
  fullName: AetherUtils.Core.Configuration.LogOptions.LogLayout
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogLayout
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 49
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Specifies the default log layout to use for NLog.
  example: []
  syntax:
    content: public string LogLayout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LogLayout As String
  overload: AetherUtils.Core.Configuration.LogOptions.LogLayout*
- uid: AetherUtils.Core.Configuration.LogOptions.LogHeader
  commentId: P:AetherUtils.Core.Configuration.LogOptions.LogHeader
  id: LogHeader
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: LogHeader
  nameWithType: LogOptions.LogHeader
  fullName: AetherUtils.Core.Configuration.LogOptions.LogHeader
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogHeader
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 54
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Specifies the header to add at the top of each log file.
  example: []
  syntax:
    content: >-
      [Config("logHeader")]

      public string LogHeader { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("logHeader")>

      Public Property LogHeader As String
  overload: AetherUtils.Core.Configuration.LogOptions.LogHeader*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logHeader
- uid: AetherUtils.Core.Configuration.LogOptions.LogFooter
  commentId: P:AetherUtils.Core.Configuration.LogOptions.LogFooter
  id: LogFooter
  parent: AetherUtils.Core.Configuration.LogOptions
  langs:
  - csharp
  - vb
  name: LogFooter
  nameWithType: LogOptions.LogFooter
  fullName: AetherUtils.Core.Configuration.LogOptions.LogFooter
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Configuration/LogOptions.cs
      branch: release
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: LogFooter
    path: ../AetherUtils.Core/Configuration/LogOptions.cs
    startLine: 60
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Configuration
  summary: Specifies the footer to add at the end of each log file.
  example: []
  syntax:
    content: >-
      [Config("logFooter")]

      public string LogFooter { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Config("logFooter")>

      Public Property LogFooter As String
  overload: AetherUtils.Core.Configuration.LogOptions.LogFooter*
  attributes:
  - type: AetherUtils.Core.Attributes.ConfigAttribute
    ctor: AetherUtils.Core.Attributes.ConfigAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: logFooter
references:
- uid: AetherUtils.Core.Configuration
  commentId: N:AetherUtils.Core.Configuration
  href: AetherUtils.html
  name: AetherUtils.Core.Configuration
  nameWithType: AetherUtils.Core.Configuration
  fullName: AetherUtils.Core.Configuration
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Configuration
    name: Configuration
    href: AetherUtils.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<LogOptions>(LogOptions)
  nameWithType: TypeExtensions.CanSerializeJson<LogOptions>(LogOptions)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Configuration.LogOptions>(AetherUtils.Core.Configuration.LogOptions)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of LogOptions)(LogOptions)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Configuration.LogOptions)(AetherUtils.Core.Configuration.LogOptions)
  name.vb: CanSerializeJson(Of LogOptions)(LogOptions)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Configuration.LogOptions)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Configuration.LogOptions)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
- uid: AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<LogOptions>(LogOptions)
  nameWithType: TypeExtensions.CanSerializeXml<LogOptions>(LogOptions)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Configuration.LogOptions>(AetherUtils.Core.Configuration.LogOptions)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of LogOptions)(LogOptions)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Configuration.LogOptions)(AetherUtils.Core.Configuration.LogOptions)
  name.vb: CanSerializeXml(Of LogOptions)(LogOptions)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Configuration.LogOptions)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Configuration.LogOptions)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
- uid: AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<LogOptions>(LogOptions)
  nameWithType: TypeExtensions.SerializeJson<LogOptions>(LogOptions)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Configuration.LogOptions>(AetherUtils.Core.Configuration.LogOptions)
  nameWithType.vb: TypeExtensions.SerializeJson(Of LogOptions)(LogOptions)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Configuration.LogOptions)(AetherUtils.Core.Configuration.LogOptions)
  name.vb: SerializeJson(Of LogOptions)(LogOptions)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Configuration.LogOptions)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Configuration.LogOptions)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
- uid: AetherUtils.Core.Configuration.LogOptions.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<LogOptions>(LogOptions)
  nameWithType: TypeExtensions.SerializeXml<LogOptions>(LogOptions)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Configuration.LogOptions>(AetherUtils.Core.Configuration.LogOptions)
  nameWithType.vb: TypeExtensions.SerializeXml(Of LogOptions)(LogOptions)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Configuration.LogOptions)(AetherUtils.Core.Configuration.LogOptions)
  name.vb: SerializeXml(Of LogOptions)(LogOptions)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Configuration.LogOptions)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Configuration.LogOptions)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Configuration.LogOptions
    name: LogOptions
    href: AetherUtils.Core.Configuration.LogOptions.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Configuration.LogOptions.AppName*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.AppName
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_AppName
  name: AppName
  nameWithType: LogOptions.AppName
  fullName: AetherUtils.Core.Configuration.LogOptions.AppName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Configuration.LogOptions.LogFileDirectory*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_LogFileDirectory
  name: LogFileDirectory
  nameWithType: LogOptions.LogFileDirectory
  fullName: AetherUtils.Core.Configuration.LogOptions.LogFileDirectory
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AetherUtils.Core.Configuration.LogOptions.IncludeDateTime*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_IncludeDateTime
  name: IncludeDateTime
  nameWithType: LogOptions.IncludeDateTime
  fullName: AetherUtils.Core.Configuration.LogOptions.IncludeDateTime
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_IncludeDateOnly
  name: IncludeDateOnly
  nameWithType: LogOptions.IncludeDateOnly
  fullName: AetherUtils.Core.Configuration.LogOptions.IncludeDateOnly
- uid: AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_NewFileEveryLaunch
  name: NewFileEveryLaunch
  nameWithType: LogOptions.NewFileEveryLaunch
  fullName: AetherUtils.Core.Configuration.LogOptions.NewFileEveryLaunch
- uid: AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_WriteLogToConsole
  name: WriteLogToConsole
  nameWithType: LogOptions.WriteLogToConsole
  fullName: AetherUtils.Core.Configuration.LogOptions.WriteLogToConsole
- uid: AetherUtils.Core.Configuration.LogOptions.LogLayout*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.LogLayout
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_LogLayout
  name: LogLayout
  nameWithType: LogOptions.LogLayout
  fullName: AetherUtils.Core.Configuration.LogOptions.LogLayout
- uid: AetherUtils.Core.Configuration.LogOptions.LogHeader*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.LogHeader
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_LogHeader
  name: LogHeader
  nameWithType: LogOptions.LogHeader
  fullName: AetherUtils.Core.Configuration.LogOptions.LogHeader
- uid: AetherUtils.Core.Configuration.LogOptions.LogFooter*
  commentId: Overload:AetherUtils.Core.Configuration.LogOptions.LogFooter
  href: AetherUtils.Core.Configuration.LogOptions.html#AetherUtils_Core_Configuration_LogOptions_LogFooter
  name: LogFooter
  nameWithType: LogOptions.LogFooter
  fullName: AetherUtils.Core.Configuration.LogOptions.LogFooter
shouldSkipMarkup: true
