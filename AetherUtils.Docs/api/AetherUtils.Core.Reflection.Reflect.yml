### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Reflection.Reflect
  commentId: T:AetherUtils.Core.Reflection.Reflect
  id: Reflect
  parent: AetherUtils.Core.Reflection
  children:
  - AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse``1(System.Object,System.Type,System.Collections.Generic.HashSet{System.Type})
  - AetherUtils.Core.Reflection.Reflect.GetCollectionElementType(System.Type)
  - AetherUtils.Core.Reflection.Reflect.IsList(System.Type)
  langs:
  - csharp
  - vb
  name: Reflect
  nameWithType: Reflect
  fullName: AetherUtils.Core.Reflection.Reflect
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Reflection/Reflect.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Reflect
    path: ../AetherUtils.Core/Reflection/Reflect.cs
    startLine: 8
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Reflection
  summary: Contains methods to help with runtime reflection of classes, types, and attributes.
  example: []
  syntax:
    content: public static class Reflect
    content.vb: Public Module Reflect
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: AetherUtils.Core.Reflection.Reflect.IsList(System.Type)
  commentId: M:AetherUtils.Core.Reflection.Reflect.IsList(System.Type)
  id: IsList(System.Type)
  parent: AetherUtils.Core.Reflection.Reflect
  langs:
  - csharp
  - vb
  name: IsList(Type)
  nameWithType: Reflect.IsList(Type)
  fullName: AetherUtils.Core.Reflection.Reflect.IsList(System.Type)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Reflection/Reflect.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: IsList
    path: ../AetherUtils.Core/Reflection/Reflect.cs
    startLine: 15
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Reflection
  summary: Indicates whether or not the specified type is a <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public static bool IsList(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to query.
    return:
      type: System.Boolean
      description: <code>true</code> if the type is a <xref href="System.Collections.Generic.List%601" data-throw-if-not-resolved="false"></xref>; <code>false</code> otherwise
    content.vb: Public Shared Function IsList(type As Type) As Boolean
  overload: AetherUtils.Core.Reflection.Reflect.IsList*
- uid: AetherUtils.Core.Reflection.Reflect.GetCollectionElementType(System.Type)
  commentId: M:AetherUtils.Core.Reflection.Reflect.GetCollectionElementType(System.Type)
  id: GetCollectionElementType(System.Type)
  parent: AetherUtils.Core.Reflection.Reflect
  langs:
  - csharp
  - vb
  name: GetCollectionElementType(Type)
  nameWithType: Reflect.GetCollectionElementType(Type)
  fullName: AetherUtils.Core.Reflection.Reflect.GetCollectionElementType(System.Type)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Reflection/Reflect.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetCollectionElementType
    path: ../AetherUtils.Core/Reflection/Reflect.cs
    startLine: 33
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Reflection
  summary: Retrieves the collection element type from this type.
  example: []
  syntax:
    content: public static Type? GetCollectionElementType(Type type)
    parameters:
    - id: type
      type: System.Type
      description: The type to query.
    return:
      type: System.Type
      description: The element type of the collection or <code>null</code> if the type was not a collection.
    content.vb: Public Shared Function GetCollectionElementType(type As Type) As Type
  overload: AetherUtils.Core.Reflection.Reflect.GetCollectionElementType*
- uid: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse``1(System.Object,System.Type,System.Collections.Generic.HashSet{System.Type})
  commentId: M:AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse``1(System.Object,System.Type,System.Collections.Generic.HashSet{System.Type})
  id: GetAttributesRecurse``1(System.Object,System.Type,System.Collections.Generic.HashSet{System.Type})
  parent: AetherUtils.Core.Reflection.Reflect
  langs:
  - csharp
  - vb
  name: GetAttributesRecurse<T>(object?, Type, HashSet<Type>?)
  nameWithType: Reflect.GetAttributesRecurse<T>(object?, Type, HashSet<Type>?)
  fullName: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse<T>(object?, System.Type, System.Collections.Generic.HashSet<System.Type>?)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Reflection/Reflect.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: GetAttributesRecurse
    path: ../AetherUtils.Core/Reflection/Reflect.cs
    startLine: 99
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Reflection
  summary: >-
    Retrieve all of the <xref href="System.Type" data-throw-if-not-resolved="false"></xref>, <xref href="System.Reflection.PropertyInfo" data-throw-if-not-resolved="false"></xref>, <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>, and <xref href="System.Object" data-throw-if-not-resolved="false"></xref>s 

    related to the custom attribute <code class="typeparamref">T</code> specified, recursively.
  example: []
  syntax:
    content: 'public static IEnumerable<(Type Class, PropertyInfo Property, Attribute Attribute, object? Instance)> GetAttributesRecurse<T>(object? instance, Type type, HashSet<Type>? visited = null) where T : Attribute'
    parameters:
    - id: instance
      type: System.Object
      description: The initial <xref href="System.Object" data-throw-if-not-resolved="false"></xref> instance to start the search on.
    - id: type
      type: System.Type
      description: The initial <xref href="System.Type" data-throw-if-not-resolved="false"></xref> to start the search on.
    - id: visited
      type: System.Collections.Generic.HashSet{System.Type}
      description: Defaults to <code>null</code>. Used to maintain a <xref href="System.Collections.Generic.HashSet%601" data-throw-if-not-resolved="false"></xref> of already visited types while searching.
    typeParameters:
    - id: T
      description: The custom attribute to search for.
    return:
      type: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}}
      description: >-
        <p>
            An <xref href="System.Collections.IEnumerable" data-throw-if-not-resolved="false"></xref> of tuples:<br />
            <code>(</code><xref href="System.Type" data-throw-if-not-resolved="false"></xref>, <xref href="System.Reflection.PropertyInfo" data-throw-if-not-resolved="false"></xref>, <xref href="System.Attribute" data-throw-if-not-resolved="false"></xref>, <xref href="System.Object" data-throw-if-not-resolved="false"></xref><code>)</code>
            </p>
    content.vb: Public Shared Function GetAttributesRecurse(Of T As Attribute)(instance As Object, type As Type, visited As HashSet(Of Type) = Nothing) As IEnumerable(Of ([Class] As Type, [Property] As PropertyInfo, Attribute As Attribute, Instance As Object))
  overload: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse*
  nameWithType.vb: Reflect.GetAttributesRecurse(Of T)(Object, Type, HashSet(Of Type))
  fullName.vb: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse(Of T)(Object, System.Type, System.Collections.Generic.HashSet(Of System.Type))
  name.vb: GetAttributesRecurse(Of T)(Object, Type, HashSet(Of Type))
references:
- uid: AetherUtils.Core.Reflection
  commentId: N:AetherUtils.Core.Reflection
  href: AetherUtils.html
  name: AetherUtils.Core.Reflection
  nameWithType: AetherUtils.Core.Reflection
  fullName: AetherUtils.Core.Reflection
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Reflection
    name: Reflection
    href: AetherUtils.Core.Reflection.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Reflection
    name: Reflection
    href: AetherUtils.Core.Reflection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: AetherUtils.Core.Reflection.Reflect.IsList*
  commentId: Overload:AetherUtils.Core.Reflection.Reflect.IsList
  href: AetherUtils.Core.Reflection.Reflect.html#AetherUtils_Core_Reflection_Reflect_IsList_System_Type_
  name: IsList
  nameWithType: Reflect.IsList
  fullName: AetherUtils.Core.Reflection.Reflect.IsList
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: AetherUtils.Core.Reflection.Reflect.GetCollectionElementType*
  commentId: Overload:AetherUtils.Core.Reflection.Reflect.GetCollectionElementType
  href: AetherUtils.Core.Reflection.Reflect.html#AetherUtils_Core_Reflection_Reflect_GetCollectionElementType_System_Type_
  name: GetCollectionElementType
  nameWithType: Reflect.GetCollectionElementType
  fullName: AetherUtils.Core.Reflection.Reflect.GetCollectionElementType
- uid: System.Reflection.PropertyInfo
  commentId: T:System.Reflection.PropertyInfo
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Attribute
  commentId: T:System.Attribute
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.attribute
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse*
  commentId: Overload:AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse
  href: AetherUtils.Core.Reflection.Reflect.html#AetherUtils_Core_Reflection_Reflect_GetAttributesRecurse__1_System_Object_System_Type_System_Collections_Generic_HashSet_System_Type__
  name: GetAttributesRecurse
  nameWithType: Reflect.GetAttributesRecurse
  fullName: AetherUtils.Core.Reflection.Reflect.GetAttributesRecurse
- uid: System.Collections.Generic.HashSet{System.Type}
  commentId: T:System.Collections.Generic.HashSet{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<Type>
  nameWithType: HashSet<Type>
  fullName: System.Collections.Generic.HashSet<System.Type>
  nameWithType.vb: HashSet(Of Type)
  fullName.vb: System.Collections.Generic.HashSet(Of System.Type)
  name.vb: HashSet(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<(Type Class, PropertyInfo Property, Attribute Attribute, object Instance)>
  nameWithType: IEnumerable<(Type Class, PropertyInfo Property, Attribute Attribute, object Instance)>
  fullName: System.Collections.Generic.IEnumerable<(System.Type Class, System.Reflection.PropertyInfo Property, System.Attribute Attribute, object Instance)>
  nameWithType.vb: IEnumerable(Of (Class As Type, Property As PropertyInfo, Attribute As Attribute, Instance As Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of (Class As System.Type, Property As System.Reflection.PropertyInfo, Attribute As System.Attribute, Instance As Object))
  name.vb: IEnumerable(Of (Class As Type, Property As PropertyInfo, Attribute As Attribute, Instance As Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Class
    name: Class
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.class
  - name: ','
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Property
    name: Property
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.property
  - name: ','
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Attribute
    name: Attribute
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.attribute
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Instance
    name: Instance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.instance
  - name: )
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Class
    name: Class
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.class
  - name: " "
  - name: As
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Property
    name: Property
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.property
  - name: " "
  - name: As
  - name: " "
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.propertyinfo
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Attribute
    name: Attribute
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.attribute
  - name: " "
  - name: As
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Type,System.Reflection.PropertyInfo,System.Attribute,System.Object}.Instance
    name: Instance
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.type,system.reflection.propertyinfo,system.attribute,system.object-.instance
  - name: " "
  - name: As
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
shouldSkipMarkup: true
