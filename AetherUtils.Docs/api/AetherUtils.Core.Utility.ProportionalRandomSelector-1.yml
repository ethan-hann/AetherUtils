### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
  commentId: T:AetherUtils.Core.Utility.ProportionalRandomSelector`1
  id: ProportionalRandomSelector`1
  parent: AetherUtils.Core.Utility
  children:
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage(`0,System.Int32)
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem
  langs:
  - csharp
  - vb
  name: ProportionalRandomSelector<T>
  nameWithType: ProportionalRandomSelector<T>
  fullName: AetherUtils.Core.Utility.ProportionalRandomSelector<T>
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Utility/ProportionalRandomSelector.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ProportionalRandomSelector
    path: ../AetherUtils.Core/Utility/ProportionalRandomSelector.cs
    startLine: 8
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Utility
  summary: Represents a cryptographically strong, random item selector using proportional percentages.
  example: []
  syntax:
    content: 'public sealed class ProportionalRandomSelector<T> where T : notnull'
    typeParameters:
    - id: T
      description: The type of item to select using this selector.
    content.vb: Public NotInheritable Class ProportionalRandomSelector(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  nameWithType.vb: ProportionalRandomSelector(Of T)
  fullName.vb: AetherUtils.Core.Utility.ProportionalRandomSelector(Of T)
  name.vb: ProportionalRandomSelector(Of T)
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage(`0,System.Int32)
  commentId: M:AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage(`0,System.Int32)
  id: AddPercentage(`0,System.Int32)
  parent: AetherUtils.Core.Utility.ProportionalRandomSelector`1
  langs:
  - csharp
  - vb
  name: AddPercentage(T, int)
  nameWithType: ProportionalRandomSelector<T>.AddPercentage(T, int)
  fullName: AetherUtils.Core.Utility.ProportionalRandomSelector<T>.AddPercentage(T, int)
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Utility/ProportionalRandomSelector.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: AddPercentage
    path: ../AetherUtils.Core/Utility/ProportionalRandomSelector.cs
    startLine: 18
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Utility
  summary: Add an item and its percentage to this selector.
  example: []
  syntax:
    content: public void AddPercentage(T item, int percentage)
    parameters:
    - id: item
      type: '{T}'
      description: The item to add.
    - id: percentage
      type: System.Int32
      description: The percentage indicating the likelihood of the item being selected.
    content.vb: Public Sub AddPercentage(item As T, percentage As Integer)
  overload: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage*
  nameWithType.vb: ProportionalRandomSelector(Of T).AddPercentage(T, Integer)
  fullName.vb: AetherUtils.Core.Utility.ProportionalRandomSelector(Of T).AddPercentage(T, Integer)
  name.vb: AddPercentage(T, Integer)
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem
  commentId: M:AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem
  id: SelectItem
  parent: AetherUtils.Core.Utility.ProportionalRandomSelector`1
  langs:
  - csharp
  - vb
  name: SelectItem()
  nameWithType: ProportionalRandomSelector<T>.SelectItem()
  fullName: AetherUtils.Core.Utility.ProportionalRandomSelector<T>.SelectItem()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Utility/ProportionalRandomSelector.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: SelectItem
    path: ../AetherUtils.Core/Utility/ProportionalRandomSelector.cs
    startLine: 28
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Utility
  summary: Get a random item from the selector using the percentages defined within.
  example: []
  syntax:
    content: public T? SelectItem()
    return:
      type: '{T}'
      description: A random item or <code>null</code> if an item could not be selected.
    content.vb: Public Function SelectItem() As T
  overload: AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem*
  nameWithType.vb: ProportionalRandomSelector(Of T).SelectItem()
  fullName.vb: AetherUtils.Core.Utility.ProportionalRandomSelector(Of T).SelectItem()
references:
- uid: AetherUtils.Core.Utility
  commentId: N:AetherUtils.Core.Utility
  href: AetherUtils.html
  name: AetherUtils.Core.Utility
  nameWithType: AetherUtils.Core.Utility
  fullName: AetherUtils.Core.Utility
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Utility
    name: Utility
    href: AetherUtils.Core.Utility.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Utility
    name: Utility
    href: AetherUtils.Core.Utility.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  nameWithType: TypeExtensions.CanSerializeJson<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Utility.ProportionalRandomSelector<T>>(AetherUtils.Core.Utility.ProportionalRandomSelector<T>)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))(AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))
  name.vb: CanSerializeJson(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  nameWithType: TypeExtensions.CanSerializeXml<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Utility.ProportionalRandomSelector<T>>(AetherUtils.Core.Utility.ProportionalRandomSelector<T>)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))(AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))
  name.vb: CanSerializeXml(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  nameWithType: TypeExtensions.SerializeJson<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Utility.ProportionalRandomSelector<T>>(AetherUtils.Core.Utility.ProportionalRandomSelector<T>)
  nameWithType.vb: TypeExtensions.SerializeJson(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))(AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))
  name.vb: SerializeJson(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  nameWithType: TypeExtensions.SerializeXml<ProportionalRandomSelector<T>>(ProportionalRandomSelector<T>)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Utility.ProportionalRandomSelector<T>>(AetherUtils.Core.Utility.ProportionalRandomSelector<T>)
  nameWithType.vb: TypeExtensions.SerializeXml(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))(AetherUtils.Core.Utility.ProportionalRandomSelector(Of T))
  name.vb: SerializeXml(Of ProportionalRandomSelector(Of T))(ProportionalRandomSelector(Of T))
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Utility.ProportionalRandomSelector{`0})
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1
    name: ProportionalRandomSelector
    href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage*
  commentId: Overload:AetherUtils.Core.Utility.ProportionalRandomSelector`1.AddPercentage
  href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html#AetherUtils_Core_Utility_ProportionalRandomSelector_1_AddPercentage__0_System_Int32_
  name: AddPercentage
  nameWithType: ProportionalRandomSelector<T>.AddPercentage
  fullName: AetherUtils.Core.Utility.ProportionalRandomSelector<T>.AddPercentage
  nameWithType.vb: ProportionalRandomSelector(Of T).AddPercentage
  fullName.vb: AetherUtils.Core.Utility.ProportionalRandomSelector(Of T).AddPercentage
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem*
  commentId: Overload:AetherUtils.Core.Utility.ProportionalRandomSelector`1.SelectItem
  href: AetherUtils.Core.Utility.ProportionalRandomSelector-1.html#AetherUtils_Core_Utility_ProportionalRandomSelector_1_SelectItem
  name: SelectItem
  nameWithType: ProportionalRandomSelector<T>.SelectItem
  fullName: AetherUtils.Core.Utility.ProportionalRandomSelector<T>.SelectItem
  nameWithType.vb: ProportionalRandomSelector(Of T).SelectItem
  fullName.vb: AetherUtils.Core.Utility.ProportionalRandomSelector(Of T).SelectItem
shouldSkipMarkup: true
