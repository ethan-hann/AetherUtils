### YamlMime:ManagedReference
items:
- uid: AetherUtils.Core.Licensing.Models.License
  commentId: T:AetherUtils.Core.Licensing.Models.License
  id: License
  parent: AetherUtils.Core.Licensing.Models
  children:
  - AetherUtils.Core.Licensing.Models.License.Customer
  - AetherUtils.Core.Licensing.Models.License.Expiration
  - AetherUtils.Core.Licensing.Models.License.Id
  - AetherUtils.Core.Licensing.Models.License.ProductFeatures
  - AetherUtils.Core.Licensing.Models.License.Quantity
  - AetherUtils.Core.Licensing.Models.License.Signature
  - AetherUtils.Core.Licensing.Models.License.ToString
  - AetherUtils.Core.Licensing.Models.License.Type
  langs:
  - csharp
  - vb
  name: License
  nameWithType: License
  fullName: AetherUtils.Core.Licensing.Models.License
  type: Class
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: License
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 8
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [TypeConverter(typeof(ExpandableObjectConverter))]

      public sealed class License : ExpandableObjectConverter
    content.vb: >-
      <TypeConverter(GetType(ExpandableObjectConverter))>

      Public NotInheritable Class License Inherits ExpandableObjectConverter
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ExpandableObjectConverter
  inheritedMembers:
  - System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  - AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  - AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  - AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
    ctor: System.ComponentModel.TypeConverterAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: System.ComponentModel.ExpandableObjectConverter
- uid: AetherUtils.Core.Licensing.Models.License.Id
  commentId: P:AetherUtils.Core.Licensing.Models.License.Id
  id: Id
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: License.Id
  fullName: AetherUtils.Core.Licensing.Models.License.Id
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Id
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 12
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(false)]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Browsable(False)>

      Public Property Id As String
  overload: AetherUtils.Core.Licensing.Models.License.Id*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: AetherUtils.Core.Licensing.Models.License.Type
  commentId: P:AetherUtils.Core.Licensing.Models.License.Type
  id: Type
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: License.Type
  fullName: AetherUtils.Core.Licensing.Models.License.Type
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Type
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 16
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(true)]

      public LicenseType Type { get; set; }
    parameters: []
    return:
      type: Standard.Licensing.LicenseType
    content.vb: >-
      <Browsable(True)>

      Public Property Type As LicenseType
  overload: AetherUtils.Core.Licensing.Models.License.Type*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: AetherUtils.Core.Licensing.Models.License.Expiration
  commentId: P:AetherUtils.Core.Licensing.Models.License.Expiration
  id: Expiration
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Expiration
  nameWithType: License.Expiration
  fullName: AetherUtils.Core.Licensing.Models.License.Expiration
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Expiration
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 22
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(true)]

      public DateTime Expiration { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <Browsable(True)>

      Public Property Expiration As Date
  overload: AetherUtils.Core.Licensing.Models.License.Expiration*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: AetherUtils.Core.Licensing.Models.License.Quantity
  commentId: P:AetherUtils.Core.Licensing.Models.License.Quantity
  id: Quantity
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Quantity
  nameWithType: License.Quantity
  fullName: AetherUtils.Core.Licensing.Models.License.Quantity
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Quantity
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 28
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(true)]

      public int Quantity { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Browsable(True)>

      Public Property Quantity As Integer
  overload: AetherUtils.Core.Licensing.Models.License.Quantity*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: true
- uid: AetherUtils.Core.Licensing.Models.License.ProductFeatures
  commentId: P:AetherUtils.Core.Licensing.Models.License.ProductFeatures
  id: ProductFeatures
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: ProductFeatures
  nameWithType: License.ProductFeatures
  fullName: AetherUtils.Core.Licensing.Models.License.ProductFeatures
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ProductFeatures
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 34
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(false)]

      public List<Feature> ProductFeatures { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{AetherUtils.Core.Licensing.Models.Feature}
    content.vb: >-
      <Browsable(False)>

      Public Property ProductFeatures As List(Of Feature)
  overload: AetherUtils.Core.Licensing.Models.License.ProductFeatures*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: AetherUtils.Core.Licensing.Models.License.Customer
  commentId: P:AetherUtils.Core.Licensing.Models.License.Customer
  id: Customer
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Customer
  nameWithType: License.Customer
  fullName: AetherUtils.Core.Licensing.Models.License.Customer
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Customer
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 41
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(false)]

      public Customer Customer { get; set; }
    parameters: []
    return:
      type: AetherUtils.Core.Licensing.Models.Customer
    content.vb: >-
      <Browsable(False)>

      Public Property Customer As Customer
  overload: AetherUtils.Core.Licensing.Models.License.Customer*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: AetherUtils.Core.Licensing.Models.License.Signature
  commentId: P:AetherUtils.Core.Licensing.Models.License.Signature
  id: Signature
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: License.Signature
  fullName: AetherUtils.Core.Licensing.Models.License.Signature
  type: Property
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: Signature
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 45
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  syntax:
    content: >-
      [Browsable(false)]

      public string Signature { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Browsable(False)>

      Public Property Signature As String
  overload: AetherUtils.Core.Licensing.Models.License.Signature*
  attributes:
  - type: System.ComponentModel.BrowsableAttribute
    ctor: System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)
    arguments:
    - type: System.Boolean
      value: false
- uid: AetherUtils.Core.Licensing.Models.License.ToString
  commentId: M:AetherUtils.Core.Licensing.Models.License.ToString
  id: ToString
  parent: AetherUtils.Core.Licensing.Models.License
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: License.ToString()
  fullName: AetherUtils.Core.Licensing.Models.License.ToString()
  type: Method
  source:
    remote:
      path: AetherUtils.Core/Licensing/Models/License.cs
      branch: master
      repo: https://github.com/ethan-hann/AetherUtils.git
    id: ToString
    path: ../AetherUtils.Core/Licensing/Models/License.cs
    startLine: 60
  assemblies:
  - AetherUtils.Core
  namespace: AetherUtils.Core.Licensing.Models
  summary: >-
    Get a string that represents this license object:<br />

    ID: <br />

    Type: <br />

    Expiration: <br />

    Quantity: <br />

    Customer Name: <br />

    Customer Email:
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: A string representing this <xref href="AetherUtils.Core.Licensing.Models.License" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: AetherUtils.Core.Licensing.Models.License.ToString*
references:
- uid: AetherUtils.Core.Licensing.Models
  commentId: N:AetherUtils.Core.Licensing.Models
  href: AetherUtils.html
  name: AetherUtils.Core.Licensing.Models
  nameWithType: AetherUtils.Core.Licensing.Models
  fullName: AetherUtils.Core.Licensing.Models
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Licensing
    name: Licensing
    href: AetherUtils.Core.Licensing.html
  - name: .
  - uid: AetherUtils.Core.Licensing.Models
    name: Models
    href: AetherUtils.Core.Licensing.Models.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Licensing
    name: Licensing
    href: AetherUtils.Core.Licensing.html
  - name: .
  - uid: AetherUtils.Core.Licensing.Models
    name: Models
    href: AetherUtils.Core.Licensing.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.ComponentModel.TypeConverter
  commentId: T:System.ComponentModel.TypeConverter
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter
  name: TypeConverter
  nameWithType: TypeConverter
  fullName: System.ComponentModel.TypeConverter
- uid: System.ComponentModel.ExpandableObjectConverter
  commentId: T:System.ComponentModel.ExpandableObjectConverter
  parent: System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter
  name: ExpandableObjectConverter
  nameWithType: ExpandableObjectConverter
  fullName: System.ComponentModel.ExpandableObjectConverter
- uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  commentId: M:System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getproperties
  name: GetProperties(ITypeDescriptorContext, object, Attribute[])
  nameWithType: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext, object, Attribute[])
  fullName: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, object, System.Attribute[])
  nameWithType.vb: ExpandableObjectConverter.GetProperties(ITypeDescriptorContext, Object, Attribute())
  fullName.vb: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, Object, System.Attribute())
  name.vb: GetProperties(ITypeDescriptorContext, Object, Attribute())
  spec.csharp:
  - uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getproperties
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.ComponentModel.ExpandableObjectConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getproperties
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Attribute
    name: Attribute
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.attribute
  - name: (
  - name: )
  - name: )
- uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ExpandableObjectConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getpropertiessupported
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ExpandableObjectConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPropertiesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getpropertiessupported
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
  spec.vb:
  - uid: System.ComponentModel.ExpandableObjectConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetPropertiesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.expandableobjectconverter.getpropertiessupported
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-componentmodel-itypedescriptorcontext-system-type)
  name: CanConvertFrom(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertFrom(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-componentmodel-itypedescriptorcontext-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-componentmodel-itypedescriptorcontext-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-type)
  name: CanConvertFrom(Type)
  nameWithType: TypeConverter.CanConvertFrom(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
    name: CanConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-type)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
    name: CanConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertfrom#system-componentmodel-typeconverter-canconvertfrom(system-type)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-componentmodel-itypedescriptorcontext-system-type)
  name: CanConvertTo(ITypeDescriptorContext, Type)
  nameWithType: TypeConverter.CanConvertTo(ITypeDescriptorContext, Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-componentmodel-itypedescriptorcontext-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
    name: CanConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-componentmodel-itypedescriptorcontext-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  commentId: M:System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-type)
  name: CanConvertTo(Type)
  nameWithType: TypeConverter.CanConvertTo(Type)
  fullName: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
    name: CanConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-type)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
    name: CanConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.canconvertto#system-componentmodel-typeconverter-canconvertto(system-type)
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, object)
  nameWithType: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)
  nameWithType.vb: TypeConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, Object)
  name.vb: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-object)
  name: ConvertFrom(object)
  nameWithType: TypeConverter.ConvertFrom(object)
  fullName: System.ComponentModel.TypeConverter.ConvertFrom(object)
  nameWithType.vb: TypeConverter.ConvertFrom(Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFrom(Object)
  name.vb: ConvertFrom(Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
    name: ConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
    name: ConvertFrom
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrom#system-componentmodel-typeconverter-convertfrom(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-componentmodel-itypedescriptorcontext-system-string)
  name: ConvertFromInvariantString(ITypeDescriptorContext, string)
  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, string)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, string)
  nameWithType.vb: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext, String)
  name.vb: ConvertFromInvariantString(ITypeDescriptorContext, String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-componentmodel-itypedescriptorcontext-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-componentmodel-itypedescriptorcontext-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-string)
  name: ConvertFromInvariantString(string)
  nameWithType: TypeConverter.ConvertFromInvariantString(string)
  fullName: System.ComponentModel.TypeConverter.ConvertFromInvariantString(string)
  nameWithType.vb: TypeConverter.ConvertFromInvariantString(String)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFromInvariantString(String)
  name.vb: ConvertFromInvariantString(String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
    name: ConvertFromInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
    name: ConvertFromInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfrominvariantstring#system-componentmodel-typeconverter-convertfrominvariantstring(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-string)
  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, string)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, string)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)
  nameWithType.vb: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, String)
  name.vb: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-string)
  name: ConvertFromString(ITypeDescriptorContext, string)
  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, string)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, string)
  nameWithType.vb: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, String)
  name.vb: ConvertFromString(ITypeDescriptorContext, String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-componentmodel-itypedescriptorcontext-system-string)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  commentId: M:System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-string)
  name: ConvertFromString(string)
  nameWithType: TypeConverter.ConvertFromString(string)
  fullName: System.ComponentModel.TypeConverter.ConvertFromString(string)
  nameWithType.vb: TypeConverter.ConvertFromString(String)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertFromString(String)
  name.vb: ConvertFromString(String)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)
    name: ConvertFromString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertfromstring#system-componentmodel-typeconverter-convertfromstring(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object-system-type)
  name: ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type)
  nameWithType: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object, System.Type)
  nameWithType.vb: TypeConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, Object, System.Type)
  name.vb: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
    name: ConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
    name: ConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object-system-type)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  commentId: M:System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-object-system-type)
  name: ConvertTo(object, Type)
  nameWithType: TypeConverter.ConvertTo(object, Type)
  fullName: System.ComponentModel.TypeConverter.ConvertTo(object, System.Type)
  nameWithType.vb: TypeConverter.ConvertTo(Object, Type)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertTo(Object, System.Type)
  name.vb: ConvertTo(Object, Type)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
    name: ConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-object-system-type)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
    name: ConvertTo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.convertto#system-componentmodel-typeconverter-convertto(system-object-system-type)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-componentmodel-itypedescriptorcontext-system-object)
  name: ConvertToInvariantString(ITypeDescriptorContext, object)
  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, object)
  nameWithType.vb: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext, Object)
  name.vb: ConvertToInvariantString(ITypeDescriptorContext, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-object)
  name: ConvertToInvariantString(object)
  nameWithType: TypeConverter.ConvertToInvariantString(object)
  fullName: System.ComponentModel.TypeConverter.ConvertToInvariantString(object)
  nameWithType.vb: TypeConverter.ConvertToInvariantString(Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertToInvariantString(Object)
  name.vb: ConvertToInvariantString(Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
    name: ConvertToInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
    name: ConvertToInvariantString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttoinvariantstring#system-componentmodel-typeconverter-converttoinvariantstring(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  name: ConvertToString(ITypeDescriptorContext, CultureInfo, object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, object)
  nameWithType.vb: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, Object)
  name.vb: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-globalization-cultureinfo-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Globalization.CultureInfo
    name: CultureInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.globalization.cultureinfo
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-object)
  name: ConvertToString(ITypeDescriptorContext, object)
  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, object)
  nameWithType.vb: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext, Object)
  name.vb: ConvertToString(ITypeDescriptorContext, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-object)
  name: ConvertToString(object)
  nameWithType: TypeConverter.ConvertToString(object)
  fullName: System.ComponentModel.TypeConverter.ConvertToString(object)
  nameWithType.vb: TypeConverter.ConvertToString(Object)
  fullName.vb: System.ComponentModel.TypeConverter.ConvertToString(Object)
  name.vb: ConvertToString(Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)
    name: ConvertToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.converttostring#system-componentmodel-typeconverter-converttostring(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-collections-idictionary)
  name: CreateInstance(IDictionary)
  nameWithType: TypeConverter.CreateInstance(IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
    name: CreateInstance
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-collections-idictionary)
  - name: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
    name: CreateInstance
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-collections-idictionary)
  - name: (
  - uid: System.Collections.IDictionary
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  - name: )
- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  commentId: M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-componentmodel-itypedescriptorcontext-system-collections-idictionary)
  name: CreateInstance(ITypeDescriptorContext, IDictionary)
  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)
  fullName: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext, System.Collections.IDictionary)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
    name: CreateInstance
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-componentmodel-itypedescriptorcontext-system-collections-idictionary)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Collections.IDictionary
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
    name: CreateInstance
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.createinstance#system-componentmodel-typeconverter-createinstance(system-componentmodel-itypedescriptorcontext-system-collections-idictionary)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Collections.IDictionary
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  - name: )
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported
  name: GetCreateInstanceSupported()
  nameWithType: TypeConverter.GetCreateInstanceSupported()
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
    name: GetCreateInstanceSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported
    name: GetCreateInstanceSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported
  - name: (
  - name: )
- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported(system-componentmodel-itypedescriptorcontext)
  name: GetCreateInstanceSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetCreateInstanceSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetCreateInstanceSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getcreateinstancesupported#system-componentmodel-typeconverter-getcreateinstancesupported(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-componentmodel-itypedescriptorcontext-system-object)
  name: GetProperties(ITypeDescriptorContext, object)
  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, object)
  nameWithType.vb: TypeConverter.GetProperties(ITypeDescriptorContext, Object)
  fullName.vb: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext, Object)
  name.vb: GetProperties(ITypeDescriptorContext, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.GetProperties(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-object)
  name: GetProperties(object)
  nameWithType: TypeConverter.GetProperties(object)
  fullName: System.ComponentModel.TypeConverter.GetProperties(object)
  nameWithType.vb: TypeConverter.GetProperties(Object)
  fullName.vb: System.ComponentModel.TypeConverter.GetProperties(Object)
  name.vb: GetProperties(Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)
    name: GetProperties
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getproperties#system-componentmodel-typeconverter-getproperties(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetPropertiesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getpropertiessupported#system-componentmodel-typeconverter-getpropertiessupported
  name: GetPropertiesSupported()
  nameWithType: TypeConverter.GetPropertiesSupported()
  fullName: System.ComponentModel.TypeConverter.GetPropertiesSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
    name: GetPropertiesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getpropertiessupported#system-componentmodel-typeconverter-getpropertiessupported
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetPropertiesSupported
    name: GetPropertiesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getpropertiessupported#system-componentmodel-typeconverter-getpropertiessupported
  - name: (
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValues
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues
  name: GetStandardValues()
  nameWithType: TypeConverter.GetStandardValues()
  fullName: System.ComponentModel.TypeConverter.GetStandardValues()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues
    name: GetStandardValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues
    name: GetStandardValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues
  - name: (
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues(system-componentmodel-itypedescriptorcontext)
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValues
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvalues#system-componentmodel-typeconverter-getstandardvalues(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive
  name: GetStandardValuesExclusive()
  nameWithType: TypeConverter.GetStandardValuesExclusive()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
    name: GetStandardValuesExclusive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive
    name: GetStandardValuesExclusive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive
  - name: (
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive(system-componentmodel-itypedescriptorcontext)
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesExclusive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesExclusive
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluesexclusive#system-componentmodel-typeconverter-getstandardvaluesexclusive(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported
  name: GetStandardValuesSupported()
  nameWithType: TypeConverter.GetStandardValuesSupported()
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported()
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
    name: GetStandardValuesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported
  - name: (
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported
    name: GetStandardValuesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported
  - name: (
  - name: )
- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  commentId: M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported(system-componentmodel-itypedescriptorcontext)
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
    name: GetStandardValuesSupported
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.getstandardvaluessupported#system-componentmodel-typeconverter-getstandardvaluessupported(system-componentmodel-itypedescriptorcontext)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: )
- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-componentmodel-itypedescriptorcontext-system-object)
  name: IsValid(ITypeDescriptorContext, object)
  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, object)
  fullName: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, object)
  nameWithType.vb: TypeConverter.IsValid(ITypeDescriptorContext, Object)
  fullName.vb: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext, Object)
  name.vb: IsValid(ITypeDescriptorContext, Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: IsValid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
    name: IsValid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-componentmodel-itypedescriptorcontext-system-object)
  - name: (
  - uid: System.ComponentModel.ITypeDescriptorContext
    name: ITypeDescriptorContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.itypedescriptorcontext
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
  commentId: M:System.ComponentModel.TypeConverter.IsValid(System.Object)
  parent: System.ComponentModel.TypeConverter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-object)
  name: IsValid(object)
  nameWithType: TypeConverter.IsValid(object)
  fullName: System.ComponentModel.TypeConverter.IsValid(object)
  nameWithType.vb: TypeConverter.IsValid(Object)
  fullName.vb: System.ComponentModel.TypeConverter.IsValid(Object)
  name.vb: IsValid(Object)
  spec.csharp:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
    name: IsValid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ComponentModel.TypeConverter.IsValid(System.Object)
    name: IsValid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel.typeconverter.isvalid#system-componentmodel-typeconverter-isvalid(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<License>(License)
  nameWithType: TypeExtensions.CanSerializeJson<License>(License)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<AetherUtils.Core.Licensing.Models.License>(AetherUtils.Core.Licensing.Models.License)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of License)(License)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of AetherUtils.Core.Licensing.Models.License)(AetherUtils.Core.Licensing.Models.License)
  name.vb: CanSerializeJson(Of License)(License)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Licensing.Models.License)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(AetherUtils.Core.Licensing.Models.License)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
- uid: AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<License>(License)
  nameWithType: TypeExtensions.CanSerializeXml<License>(License)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<AetherUtils.Core.Licensing.Models.License>(AetherUtils.Core.Licensing.Models.License)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of License)(License)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of AetherUtils.Core.Licensing.Models.License)(AetherUtils.Core.Licensing.Models.License)
  name.vb: CanSerializeXml(Of License)(License)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Licensing.Models.License)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(AetherUtils.Core.Licensing.Models.License)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
- uid: AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<License>(License)
  nameWithType: TypeExtensions.SerializeJson<License>(License)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<AetherUtils.Core.Licensing.Models.License>(AetherUtils.Core.Licensing.Models.License)
  nameWithType.vb: TypeExtensions.SerializeJson(Of License)(License)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of AetherUtils.Core.Licensing.Models.License)(AetherUtils.Core.Licensing.Models.License)
  name.vb: SerializeJson(Of License)(License)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Licensing.Models.License)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(AetherUtils.Core.Licensing.Models.License)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
- uid: AetherUtils.Core.Licensing.Models.License.AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  parent: AetherUtils.Core.Extensions.TypeExtensions
  definition: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<License>(License)
  nameWithType: TypeExtensions.SerializeXml<License>(License)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<AetherUtils.Core.Licensing.Models.License>(AetherUtils.Core.Licensing.Models.License)
  nameWithType.vb: TypeExtensions.SerializeXml(Of License)(License)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of AetherUtils.Core.Licensing.Models.License)(AetherUtils.Core.Licensing.Models.License)
  name.vb: SerializeXml(Of License)(License)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Licensing.Models.License)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: '>'
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(AetherUtils.Core.Licensing.Models.License)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
  - name: (
  - uid: AetherUtils.Core.Licensing.Models.License
    name: License
    href: AetherUtils.Core.Licensing.Models.License.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.ComponentModel
    name: ComponentModel
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.componentmodel
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  name: CanSerializeJson<T>(T)
  nameWithType: TypeExtensions.CanSerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson(Of T)(T)
  name.vb: CanSerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeJson``1(``0)
    name: CanSerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions
  commentId: T:AetherUtils.Core.Extensions.TypeExtensions
  parent: AetherUtils.Core.Extensions
  href: AetherUtils.Core.Extensions.TypeExtensions.html
  name: TypeExtensions
  nameWithType: TypeExtensions
  fullName: AetherUtils.Core.Extensions.TypeExtensions
- uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  name: CanSerializeXml<T>(T)
  nameWithType: TypeExtensions.CanSerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.CanSerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml(Of T)(T)
  name.vb: CanSerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.CanSerializeXml``1(``0)
    name: CanSerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_CanSerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  name: SerializeJson<T>(T)
  nameWithType: TypeExtensions.SerializeJson<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson<T>(T)
  nameWithType.vb: TypeExtensions.SerializeJson(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson(Of T)(T)
  name.vb: SerializeJson(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeJson``1(``0)
    name: SerializeJson
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  commentId: M:AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
  href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  name: SerializeXml<T>(T)
  nameWithType: TypeExtensions.SerializeXml<T>(T)
  fullName: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml<T>(T)
  nameWithType.vb: TypeExtensions.SerializeXml(Of T)(T)
  fullName.vb: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml(Of T)(T)
  name.vb: SerializeXml(Of T)(T)
  spec.csharp:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: AetherUtils.Core.Extensions.TypeExtensions.SerializeXml``1(``0)
    name: SerializeXml
    href: AetherUtils.Core.Extensions.TypeExtensions.html#AetherUtils_Core_Extensions_TypeExtensions_SerializeXml__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: AetherUtils.Core.Extensions
  commentId: N:AetherUtils.Core.Extensions
  href: AetherUtils.html
  name: AetherUtils.Core.Extensions
  nameWithType: AetherUtils.Core.Extensions
  fullName: AetherUtils.Core.Extensions
  spec.csharp:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
  spec.vb:
  - uid: AetherUtils
    name: AetherUtils
    href: AetherUtils.html
  - name: .
  - uid: AetherUtils.Core
    name: Core
    href: AetherUtils.Core.html
  - name: .
  - uid: AetherUtils.Core.Extensions
    name: Extensions
    href: AetherUtils.Core.Extensions.html
- uid: AetherUtils.Core.Licensing.Models.License.Id*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Id
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Id
  name: Id
  nameWithType: License.Id
  fullName: AetherUtils.Core.Licensing.Models.License.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: AetherUtils.Core.Licensing.Models.License.Type*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Type
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Type
  name: Type
  nameWithType: License.Type
  fullName: AetherUtils.Core.Licensing.Models.License.Type
- uid: Standard.Licensing.LicenseType
  commentId: T:Standard.Licensing.LicenseType
  parent: Standard.Licensing
  isExternal: true
  name: LicenseType
  nameWithType: LicenseType
  fullName: Standard.Licensing.LicenseType
- uid: Standard.Licensing
  commentId: N:Standard.Licensing
  isExternal: true
  name: Standard.Licensing
  nameWithType: Standard.Licensing
  fullName: Standard.Licensing
  spec.csharp:
  - uid: Standard
    name: Standard
    isExternal: true
  - name: .
  - uid: Standard.Licensing
    name: Licensing
    isExternal: true
  spec.vb:
  - uid: Standard
    name: Standard
    isExternal: true
  - name: .
  - uid: Standard.Licensing
    name: Licensing
    isExternal: true
- uid: AetherUtils.Core.Licensing.Models.License.Expiration*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Expiration
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Expiration
  name: Expiration
  nameWithType: License.Expiration
  fullName: AetherUtils.Core.Licensing.Models.License.Expiration
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: AetherUtils.Core.Licensing.Models.License.Quantity*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Quantity
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Quantity
  name: Quantity
  nameWithType: License.Quantity
  fullName: AetherUtils.Core.Licensing.Models.License.Quantity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: AetherUtils.Core.Licensing.Models.License.ProductFeatures*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.ProductFeatures
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_ProductFeatures
  name: ProductFeatures
  nameWithType: License.ProductFeatures
  fullName: AetherUtils.Core.Licensing.Models.License.ProductFeatures
- uid: System.Collections.Generic.List{AetherUtils.Core.Licensing.Models.Feature}
  commentId: T:System.Collections.Generic.List{AetherUtils.Core.Licensing.Models.Feature}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Feature>
  nameWithType: List<Feature>
  fullName: System.Collections.Generic.List<AetherUtils.Core.Licensing.Models.Feature>
  nameWithType.vb: List(Of Feature)
  fullName.vb: System.Collections.Generic.List(Of AetherUtils.Core.Licensing.Models.Feature)
  name.vb: List(Of Feature)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: AetherUtils.Core.Licensing.Models.Feature
    name: Feature
    href: AetherUtils.Core.Licensing.Models.Feature.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: AetherUtils.Core.Licensing.Models.Feature
    name: Feature
    href: AetherUtils.Core.Licensing.Models.Feature.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: AetherUtils.Core.Licensing.Models.License.Customer*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Customer
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Customer
  name: Customer
  nameWithType: License.Customer
  fullName: AetherUtils.Core.Licensing.Models.License.Customer
- uid: AetherUtils.Core.Licensing.Models.Customer
  commentId: T:AetherUtils.Core.Licensing.Models.Customer
  parent: AetherUtils.Core.Licensing.Models
  href: AetherUtils.Core.Licensing.Models.Customer.html
  name: Customer
  nameWithType: Customer
  fullName: AetherUtils.Core.Licensing.Models.Customer
- uid: AetherUtils.Core.Licensing.Models.License.Signature*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.Signature
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_Signature
  name: Signature
  nameWithType: License.Signature
  fullName: AetherUtils.Core.Licensing.Models.License.Signature
- uid: AetherUtils.Core.Licensing.Models.License
  commentId: T:AetherUtils.Core.Licensing.Models.License
  href: AetherUtils.Core.Licensing.Models.License.html
  name: License
  nameWithType: License
  fullName: AetherUtils.Core.Licensing.Models.License
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: AetherUtils.Core.Licensing.Models.License.ToString*
  commentId: Overload:AetherUtils.Core.Licensing.Models.License.ToString
  href: AetherUtils.Core.Licensing.Models.License.html#AetherUtils_Core_Licensing_Models_License_ToString
  name: ToString
  nameWithType: License.ToString
  fullName: AetherUtils.Core.Licensing.Models.License.ToString
shouldSkipMarkup: true
